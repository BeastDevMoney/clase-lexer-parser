Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> clases
Rule 2     clases -> clases clase
Rule 3     clases -> clase
Rule 4     clase -> CLASS TYPEID INHERITS TYPEID { metodos } ;
Rule 5     clase -> CLASS TYPEID INHERITS TYPEID { atributos } ;
Rule 6     clase -> CLASS TYPEID { metodos } ;
Rule 7     clase -> CLASS TYPEID { atributos } ;
Rule 8     atributos -> <empty>
Rule 9     atributos -> atributos atributo
Rule 10    atributo -> OBJECTID : TYPEID ASSIGN expresion ;
Rule 11    atributo -> OBJECTID : TYPEID ;
Rule 12    metodos -> <empty>
Rule 13    metodos -> metodos metodo
Rule 14    metodo -> OBJECTID ( ) : TYPEID { expresion } ;
Rule 15    formales -> <empty>
Rule 16    formales -> formales formal ,
Rule 17    formales -> OBJECTID ( formales ) : TYPEID { expresion } ;
Rule 18    formal -> OBJECTID : TYPEID
Rule 19    expresion -> OBJECTID
Rule 20    expresion -> BOOL_CONST
Rule 21    expresion -> STR_CONST
Rule 22    expresion -> INT_CONST
Rule 23    expresion -> NEW TYPEID
Rule 24    expresion -> { expresion_lista expresion ; }
Rule 25    expresion -> CASE expresion OF case_list ; ESAC
Rule 26    expresion -> LET let_declarations IN expresion
Rule 27    expresion -> WHILE expresion LOOP expresion POOL
Rule 28    expresion -> IF expresion THEN expresion ELSE expresion FI
Rule 29    expresion -> expresion . OBJECTID ( expresiones , expresion )
Rule 30    expresion -> expresion . OBJECTID ( )
Rule 31    expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion )
Rule 32    expresion -> expresion @ TYPEID . OBJECTID ( )
Rule 33    expresion -> NOT expresion  [precedence=nonassoc, level=2]
Rule 34    expresion -> ISVOID expresion  [precedence=left, level=3]
Rule 35    expresion -> ~ expresion
Rule 36    expresion -> ( expresion )
Rule 37    expresion -> expresion LE expresion  [precedence=nonassoc, level=2]
Rule 38    expresion -> expresion = expresion  [precedence=nonassoc, level=2]
Rule 39    expresion -> expresion < expresion  [precedence=nonassoc, level=2]
Rule 40    expresion -> expresion / expresion  [precedence=left, level=3]
Rule 41    expresion -> expresion * expresion  [precedence=left, level=3]
Rule 42    expresion -> expresion - expresion  [precedence=left, level=3]
Rule 43    expresion -> expresion + expresion  [precedence=left, level=3]
Rule 44    expresiones -> <empty>
Rule 45    expresiones -> expresiones expresion ,
Rule 46    opt_assign -> ASSIGN expresion  [precedence=right, level=1]
Rule 47    opt_assign -> <empty>
Rule 48    let_declaration -> OBJECTID : TYPEID opt_assign
Rule 49    let_declarations -> let_declarations , let_declaration
Rule 50    let_declarations -> let_declaration
Rule 51    case_list -> case_list OBJECTID : TYPEID DARROW expresion
Rule 52    case_list -> OBJECTID : TYPEID DARROW expresion
Rule 53    espacios -> <empty>
Rule 54    expresion_lista -> espacios expresion ;

Unused terminals:

    NUMBER

Terminals, with rules where they appear:

(                    : 14 17 29 30 31 32 36
)                    : 14 17 29 30 31 32 36
*                    : 41
+                    : 43
,                    : 16 29 31 45 49
-                    : 42
.                    : 29 30 31 32
/                    : 40
:                    : 10 11 14 17 18 48 51 52
;                    : 4 5 6 7 10 11 14 17 24 25 54
<                    : 39
=                    : 38
@                    : 31 32
ASSIGN               : 10 46
BOOL_CONST           : 20
CASE                 : 25
CLASS                : 4 5 6 7
DARROW               : 51 52
ELSE                 : 28
ESAC                 : 25
FI                   : 28
IF                   : 28
IN                   : 26
INHERITS             : 4 5
INT_CONST            : 22
ISVOID               : 34
LE                   : 37
LET                  : 26
LOOP                 : 27
NEW                  : 23
NOT                  : 33
NUMBER               : 
OBJECTID             : 10 11 14 17 18 19 29 30 31 32 48 51 52
OF                   : 25
POOL                 : 27
STR_CONST            : 21
THEN                 : 28
TYPEID               : 4 4 5 5 6 7 10 11 14 17 18 23 31 32 48 51 52
WHILE                : 27
error                : 
{                    : 4 5 6 7 14 17 24
}                    : 4 5 6 7 14 17 24
~                    : 35

Nonterminals, with rules where they appear:

Programa             : 0
atributo             : 9
atributos            : 5 7 9
case_list            : 25 51
clase                : 2 3
clases               : 1 2
espacios             : 54
expresion            : 10 14 17 24 25 26 27 27 28 28 28 29 29 30 31 31 32 33 34 35 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 45 46 51 52 54
expresion_lista      : 24
expresiones          : 29 31 45
formal               : 16
formales             : 16 17
let_declaration      : 49 50
let_declarations     : 26 49
metodo               : 13
metodos              : 4 6 13
opt_assign           : 48


state 0

    (0) S' -> . Programa
    (1) Programa -> . clases
    (2) clases -> . clases clase
    (3) clases -> . clase
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { metodos } ;
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { atributos } ;
    (6) clase -> . CLASS TYPEID { metodos } ;
    (7) clase -> . CLASS TYPEID { atributos } ;
    CLASS           shift and go to state 4

    Programa                       shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> Programa .


state 2

    (1) Programa -> clases .
    (2) clases -> clases . clase
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { metodos } ;
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { atributos } ;
    (6) clase -> . CLASS TYPEID { metodos } ;
    (7) clase -> . CLASS TYPEID { atributos } ;
    $end            reduce using rule 1 (Programa -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase .
    CLASS           reduce using rule 3 (clases -> clase .)
    $end            reduce using rule 3 (clases -> clase .)


state 4

    (4) clase -> CLASS . TYPEID INHERITS TYPEID { metodos } ;
    (5) clase -> CLASS . TYPEID INHERITS TYPEID { atributos } ;
    (6) clase -> CLASS . TYPEID { metodos } ;
    (7) clase -> CLASS . TYPEID { atributos } ;
    TYPEID          shift and go to state 6


state 5

    (2) clases -> clases clase .
    CLASS           reduce using rule 2 (clases -> clases clase .)
    $end            reduce using rule 2 (clases -> clases clase .)


state 6

    (4) clase -> CLASS TYPEID . INHERITS TYPEID { metodos } ;
    (5) clase -> CLASS TYPEID . INHERITS TYPEID { atributos } ;
    (6) clase -> CLASS TYPEID . { metodos } ;
    (7) clase -> CLASS TYPEID . { atributos } ;
    INHERITS        shift and go to state 7
    {               shift and go to state 8


state 7

    (4) clase -> CLASS TYPEID INHERITS . TYPEID { metodos } ;
    (5) clase -> CLASS TYPEID INHERITS . TYPEID { atributos } ;
    TYPEID          shift and go to state 9


state 8

    (6) clase -> CLASS TYPEID { . metodos } ;
    (7) clase -> CLASS TYPEID { . atributos } ;
    (12) metodos -> .
    (13) metodos -> . metodos metodo
    (8) atributos -> .
    (9) atributos -> . atributos atributo
  ! reduce/reduce conflict for } resolved using rule 8 (atributos -> .)
  ! reduce/reduce conflict for OBJECTID resolved using rule 8 (atributos -> .)
    }               reduce using rule 8 (atributos -> .)
    OBJECTID        reduce using rule 8 (atributos -> .)

    metodos                        shift and go to state 10
    atributos                      shift and go to state 11

state 9

    (4) clase -> CLASS TYPEID INHERITS TYPEID . { metodos } ;
    (5) clase -> CLASS TYPEID INHERITS TYPEID . { atributos } ;
    {               shift and go to state 12


state 10

    (6) clase -> CLASS TYPEID { metodos . } ;
    (13) metodos -> metodos . metodo
    (14) metodo -> . OBJECTID ( ) : TYPEID { expresion } ;
    }               shift and go to state 13
    OBJECTID        shift and go to state 15

    metodo                         shift and go to state 14

state 11

    (7) clase -> CLASS TYPEID { atributos . } ;
    (9) atributos -> atributos . atributo
    (10) atributo -> . OBJECTID : TYPEID ASSIGN expresion ;
    (11) atributo -> . OBJECTID : TYPEID ;
    }               shift and go to state 16
    OBJECTID        shift and go to state 18

    atributo                       shift and go to state 17

state 12

    (4) clase -> CLASS TYPEID INHERITS TYPEID { . metodos } ;
    (5) clase -> CLASS TYPEID INHERITS TYPEID { . atributos } ;
    (12) metodos -> .
    (13) metodos -> . metodos metodo
    (8) atributos -> .
    (9) atributos -> . atributos atributo
  ! reduce/reduce conflict for } resolved using rule 8 (atributos -> .)
  ! reduce/reduce conflict for OBJECTID resolved using rule 8 (atributos -> .)
    }               reduce using rule 8 (atributos -> .)
    OBJECTID        reduce using rule 8 (atributos -> .)

    metodos                        shift and go to state 19
    atributos                      shift and go to state 20

state 13

    (6) clase -> CLASS TYPEID { metodos } . ;
    ;               shift and go to state 21


state 14

    (13) metodos -> metodos metodo .
    }               reduce using rule 13 (metodos -> metodos metodo .)
    OBJECTID        reduce using rule 13 (metodos -> metodos metodo .)


state 15

    (14) metodo -> OBJECTID . ( ) : TYPEID { expresion } ;
    (               shift and go to state 22


state 16

    (7) clase -> CLASS TYPEID { atributos } . ;
    ;               shift and go to state 23


state 17

    (9) atributos -> atributos atributo .
    }               reduce using rule 9 (atributos -> atributos atributo .)
    OBJECTID        reduce using rule 9 (atributos -> atributos atributo .)


state 18

    (10) atributo -> OBJECTID . : TYPEID ASSIGN expresion ;
    (11) atributo -> OBJECTID . : TYPEID ;
    :               shift and go to state 24


state 19

    (4) clase -> CLASS TYPEID INHERITS TYPEID { metodos . } ;
    (13) metodos -> metodos . metodo
    (14) metodo -> . OBJECTID ( ) : TYPEID { expresion } ;
    }               shift and go to state 25
    OBJECTID        shift and go to state 15

    metodo                         shift and go to state 14

state 20

    (5) clase -> CLASS TYPEID INHERITS TYPEID { atributos . } ;
    (9) atributos -> atributos . atributo
    (10) atributo -> . OBJECTID : TYPEID ASSIGN expresion ;
    (11) atributo -> . OBJECTID : TYPEID ;
    }               shift and go to state 26
    OBJECTID        shift and go to state 18

    atributo                       shift and go to state 17

state 21

    (6) clase -> CLASS TYPEID { metodos } ; .
    CLASS           reduce using rule 6 (clase -> CLASS TYPEID { metodos } ; .)
    $end            reduce using rule 6 (clase -> CLASS TYPEID { metodos } ; .)


state 22

    (14) metodo -> OBJECTID ( . ) : TYPEID { expresion } ;
    )               shift and go to state 27


state 23

    (7) clase -> CLASS TYPEID { atributos } ; .
    CLASS           reduce using rule 7 (clase -> CLASS TYPEID { atributos } ; .)
    $end            reduce using rule 7 (clase -> CLASS TYPEID { atributos } ; .)


state 24

    (10) atributo -> OBJECTID : . TYPEID ASSIGN expresion ;
    (11) atributo -> OBJECTID : . TYPEID ;
    TYPEID          shift and go to state 28


state 25

    (4) clase -> CLASS TYPEID INHERITS TYPEID { metodos } . ;
    ;               shift and go to state 29


state 26

    (5) clase -> CLASS TYPEID INHERITS TYPEID { atributos } . ;
    ;               shift and go to state 30


state 27

    (14) metodo -> OBJECTID ( ) . : TYPEID { expresion } ;
    :               shift and go to state 31


state 28

    (10) atributo -> OBJECTID : TYPEID . ASSIGN expresion ;
    (11) atributo -> OBJECTID : TYPEID . ;
    ASSIGN          shift and go to state 32
    ;               shift and go to state 33


state 29

    (4) clase -> CLASS TYPEID INHERITS TYPEID { metodos } ; .
    CLASS           reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { metodos } ; .)
    $end            reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { metodos } ; .)


state 30

    (5) clase -> CLASS TYPEID INHERITS TYPEID { atributos } ; .
    CLASS           reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { atributos } ; .)
    $end            reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { atributos } ; .)


state 31

    (14) metodo -> OBJECTID ( ) : . TYPEID { expresion } ;
    TYPEID          shift and go to state 34


state 32

    (10) atributo -> OBJECTID : TYPEID ASSIGN . expresion ;
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 36

state 33

    (11) atributo -> OBJECTID : TYPEID ; .
    }               reduce using rule 11 (atributo -> OBJECTID : TYPEID ; .)
    OBJECTID        reduce using rule 11 (atributo -> OBJECTID : TYPEID ; .)


state 34

    (14) metodo -> OBJECTID ( ) : TYPEID . { expresion } ;
    {               shift and go to state 50


state 35

    (19) expresion -> OBJECTID .
    ;               reduce using rule 19 (expresion -> OBJECTID .)
    .               reduce using rule 19 (expresion -> OBJECTID .)
    @               reduce using rule 19 (expresion -> OBJECTID .)
    LE              reduce using rule 19 (expresion -> OBJECTID .)
    =               reduce using rule 19 (expresion -> OBJECTID .)
    <               reduce using rule 19 (expresion -> OBJECTID .)
    /               reduce using rule 19 (expresion -> OBJECTID .)
    *               reduce using rule 19 (expresion -> OBJECTID .)
    -               reduce using rule 19 (expresion -> OBJECTID .)
    +               reduce using rule 19 (expresion -> OBJECTID .)
    OF              reduce using rule 19 (expresion -> OBJECTID .)
    LOOP            reduce using rule 19 (expresion -> OBJECTID .)
    THEN            reduce using rule 19 (expresion -> OBJECTID .)
    )               reduce using rule 19 (expresion -> OBJECTID .)
    }               reduce using rule 19 (expresion -> OBJECTID .)
    POOL            reduce using rule 19 (expresion -> OBJECTID .)
    ELSE            reduce using rule 19 (expresion -> OBJECTID .)
    ,               reduce using rule 19 (expresion -> OBJECTID .)
    IN              reduce using rule 19 (expresion -> OBJECTID .)
    FI              reduce using rule 19 (expresion -> OBJECTID .)
    OBJECTID        reduce using rule 19 (expresion -> OBJECTID .)


state 36

    (10) atributo -> OBJECTID : TYPEID ASSIGN expresion . ;
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               shift and go to state 51
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 37

    (20) expresion -> BOOL_CONST .
    ;               reduce using rule 20 (expresion -> BOOL_CONST .)
    .               reduce using rule 20 (expresion -> BOOL_CONST .)
    @               reduce using rule 20 (expresion -> BOOL_CONST .)
    LE              reduce using rule 20 (expresion -> BOOL_CONST .)
    =               reduce using rule 20 (expresion -> BOOL_CONST .)
    <               reduce using rule 20 (expresion -> BOOL_CONST .)
    /               reduce using rule 20 (expresion -> BOOL_CONST .)
    *               reduce using rule 20 (expresion -> BOOL_CONST .)
    -               reduce using rule 20 (expresion -> BOOL_CONST .)
    +               reduce using rule 20 (expresion -> BOOL_CONST .)
    OF              reduce using rule 20 (expresion -> BOOL_CONST .)
    LOOP            reduce using rule 20 (expresion -> BOOL_CONST .)
    THEN            reduce using rule 20 (expresion -> BOOL_CONST .)
    )               reduce using rule 20 (expresion -> BOOL_CONST .)
    }               reduce using rule 20 (expresion -> BOOL_CONST .)
    POOL            reduce using rule 20 (expresion -> BOOL_CONST .)
    ELSE            reduce using rule 20 (expresion -> BOOL_CONST .)
    ,               reduce using rule 20 (expresion -> BOOL_CONST .)
    IN              reduce using rule 20 (expresion -> BOOL_CONST .)
    FI              reduce using rule 20 (expresion -> BOOL_CONST .)
    OBJECTID        reduce using rule 20 (expresion -> BOOL_CONST .)


state 38

    (21) expresion -> STR_CONST .
    ;               reduce using rule 21 (expresion -> STR_CONST .)
    .               reduce using rule 21 (expresion -> STR_CONST .)
    @               reduce using rule 21 (expresion -> STR_CONST .)
    LE              reduce using rule 21 (expresion -> STR_CONST .)
    =               reduce using rule 21 (expresion -> STR_CONST .)
    <               reduce using rule 21 (expresion -> STR_CONST .)
    /               reduce using rule 21 (expresion -> STR_CONST .)
    *               reduce using rule 21 (expresion -> STR_CONST .)
    -               reduce using rule 21 (expresion -> STR_CONST .)
    +               reduce using rule 21 (expresion -> STR_CONST .)
    OF              reduce using rule 21 (expresion -> STR_CONST .)
    LOOP            reduce using rule 21 (expresion -> STR_CONST .)
    THEN            reduce using rule 21 (expresion -> STR_CONST .)
    )               reduce using rule 21 (expresion -> STR_CONST .)
    }               reduce using rule 21 (expresion -> STR_CONST .)
    POOL            reduce using rule 21 (expresion -> STR_CONST .)
    ELSE            reduce using rule 21 (expresion -> STR_CONST .)
    ,               reduce using rule 21 (expresion -> STR_CONST .)
    IN              reduce using rule 21 (expresion -> STR_CONST .)
    FI              reduce using rule 21 (expresion -> STR_CONST .)
    OBJECTID        reduce using rule 21 (expresion -> STR_CONST .)


state 39

    (22) expresion -> INT_CONST .
    ;               reduce using rule 22 (expresion -> INT_CONST .)
    .               reduce using rule 22 (expresion -> INT_CONST .)
    @               reduce using rule 22 (expresion -> INT_CONST .)
    LE              reduce using rule 22 (expresion -> INT_CONST .)
    =               reduce using rule 22 (expresion -> INT_CONST .)
    <               reduce using rule 22 (expresion -> INT_CONST .)
    /               reduce using rule 22 (expresion -> INT_CONST .)
    *               reduce using rule 22 (expresion -> INT_CONST .)
    -               reduce using rule 22 (expresion -> INT_CONST .)
    +               reduce using rule 22 (expresion -> INT_CONST .)
    OF              reduce using rule 22 (expresion -> INT_CONST .)
    LOOP            reduce using rule 22 (expresion -> INT_CONST .)
    THEN            reduce using rule 22 (expresion -> INT_CONST .)
    )               reduce using rule 22 (expresion -> INT_CONST .)
    }               reduce using rule 22 (expresion -> INT_CONST .)
    POOL            reduce using rule 22 (expresion -> INT_CONST .)
    ELSE            reduce using rule 22 (expresion -> INT_CONST .)
    ,               reduce using rule 22 (expresion -> INT_CONST .)
    IN              reduce using rule 22 (expresion -> INT_CONST .)
    FI              reduce using rule 22 (expresion -> INT_CONST .)
    OBJECTID        reduce using rule 22 (expresion -> INT_CONST .)


state 40

    (23) expresion -> NEW . TYPEID
    TYPEID          shift and go to state 61


state 41

    (24) expresion -> { . expresion_lista expresion ; }
    (54) expresion_lista -> . espacios expresion ;
    (53) espacios -> .
    OBJECTID        reduce using rule 53 (espacios -> .)
    BOOL_CONST      reduce using rule 53 (espacios -> .)
    STR_CONST       reduce using rule 53 (espacios -> .)
    INT_CONST       reduce using rule 53 (espacios -> .)
    NEW             reduce using rule 53 (espacios -> .)
    {               reduce using rule 53 (espacios -> .)
    CASE            reduce using rule 53 (espacios -> .)
    LET             reduce using rule 53 (espacios -> .)
    WHILE           reduce using rule 53 (espacios -> .)
    IF              reduce using rule 53 (espacios -> .)
    NOT             reduce using rule 53 (espacios -> .)
    ISVOID          reduce using rule 53 (espacios -> .)
    ~               reduce using rule 53 (espacios -> .)
    (               reduce using rule 53 (espacios -> .)

    expresion_lista                shift and go to state 62
    espacios                       shift and go to state 63

state 42

    (25) expresion -> CASE . expresion OF case_list ; ESAC
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 64

state 43

    (26) expresion -> LET . let_declarations IN expresion
    (49) let_declarations -> . let_declarations , let_declaration
    (50) let_declarations -> . let_declaration
    (48) let_declaration -> . OBJECTID : TYPEID opt_assign
    OBJECTID        shift and go to state 67

    let_declarations               shift and go to state 65
    let_declaration                shift and go to state 66

state 44

    (27) expresion -> WHILE . expresion LOOP expresion POOL
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 68

state 45

    (28) expresion -> IF . expresion THEN expresion ELSE expresion FI
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 69

state 46

    (36) expresion -> ( . expresion )
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 70

state 47

    (33) expresion -> NOT . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 71

state 48

    (34) expresion -> ISVOID . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 72

state 49

    (35) expresion -> ~ . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 73

state 50

    (14) metodo -> OBJECTID ( ) : TYPEID { . expresion } ;
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 74

state 51

    (10) atributo -> OBJECTID : TYPEID ASSIGN expresion ; .
    }               reduce using rule 10 (atributo -> OBJECTID : TYPEID ASSIGN expresion ; .)
    OBJECTID        reduce using rule 10 (atributo -> OBJECTID : TYPEID ASSIGN expresion ; .)


state 52

    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    OBJECTID        shift and go to state 75


state 53

    (31) expresion -> expresion @ . TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 76


state 54

    (37) expresion -> expresion LE . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 77

state 55

    (38) expresion -> expresion = . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 78

state 56

    (39) expresion -> expresion < . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 79

state 57

    (40) expresion -> expresion / . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 80

state 58

    (41) expresion -> expresion * . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 81

state 59

    (42) expresion -> expresion - . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 82

state 60

    (43) expresion -> expresion + . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 83

state 61

    (23) expresion -> NEW TYPEID .
    ;               reduce using rule 23 (expresion -> NEW TYPEID .)
    .               reduce using rule 23 (expresion -> NEW TYPEID .)
    @               reduce using rule 23 (expresion -> NEW TYPEID .)
    LE              reduce using rule 23 (expresion -> NEW TYPEID .)
    =               reduce using rule 23 (expresion -> NEW TYPEID .)
    <               reduce using rule 23 (expresion -> NEW TYPEID .)
    /               reduce using rule 23 (expresion -> NEW TYPEID .)
    *               reduce using rule 23 (expresion -> NEW TYPEID .)
    -               reduce using rule 23 (expresion -> NEW TYPEID .)
    +               reduce using rule 23 (expresion -> NEW TYPEID .)
    OF              reduce using rule 23 (expresion -> NEW TYPEID .)
    LOOP            reduce using rule 23 (expresion -> NEW TYPEID .)
    THEN            reduce using rule 23 (expresion -> NEW TYPEID .)
    )               reduce using rule 23 (expresion -> NEW TYPEID .)
    }               reduce using rule 23 (expresion -> NEW TYPEID .)
    POOL            reduce using rule 23 (expresion -> NEW TYPEID .)
    ELSE            reduce using rule 23 (expresion -> NEW TYPEID .)
    ,               reduce using rule 23 (expresion -> NEW TYPEID .)
    IN              reduce using rule 23 (expresion -> NEW TYPEID .)
    FI              reduce using rule 23 (expresion -> NEW TYPEID .)
    OBJECTID        reduce using rule 23 (expresion -> NEW TYPEID .)


state 62

    (24) expresion -> { expresion_lista . expresion ; }
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 84

state 63

    (54) expresion_lista -> espacios . expresion ;
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 85

state 64

    (25) expresion -> CASE expresion . OF case_list ; ESAC
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    OF              shift and go to state 86
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 65

    (26) expresion -> LET let_declarations . IN expresion
    (49) let_declarations -> let_declarations . , let_declaration
    IN              shift and go to state 87
    ,               shift and go to state 88


state 66

    (50) let_declarations -> let_declaration .
    IN              reduce using rule 50 (let_declarations -> let_declaration .)
    ,               reduce using rule 50 (let_declarations -> let_declaration .)


state 67

    (48) let_declaration -> OBJECTID . : TYPEID opt_assign
    :               shift and go to state 89


state 68

    (27) expresion -> WHILE expresion . LOOP expresion POOL
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    LOOP            shift and go to state 90
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 69

    (28) expresion -> IF expresion . THEN expresion ELSE expresion FI
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    THEN            shift and go to state 91
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 70

    (36) expresion -> ( expresion . )
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    )               shift and go to state 92
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 71

    (33) expresion -> NOT expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 33 (expresion -> NOT expresion .)
    LE              reduce using rule 33 (expresion -> NOT expresion .)
    =               reduce using rule 33 (expresion -> NOT expresion .)
    <               reduce using rule 33 (expresion -> NOT expresion .)
    OF              reduce using rule 33 (expresion -> NOT expresion .)
    LOOP            reduce using rule 33 (expresion -> NOT expresion .)
    THEN            reduce using rule 33 (expresion -> NOT expresion .)
    )               reduce using rule 33 (expresion -> NOT expresion .)
    }               reduce using rule 33 (expresion -> NOT expresion .)
    POOL            reduce using rule 33 (expresion -> NOT expresion .)
    ELSE            reduce using rule 33 (expresion -> NOT expresion .)
    ,               reduce using rule 33 (expresion -> NOT expresion .)
    IN              reduce using rule 33 (expresion -> NOT expresion .)
    FI              reduce using rule 33 (expresion -> NOT expresion .)
    OBJECTID        reduce using rule 33 (expresion -> NOT expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 72

    (34) expresion -> ISVOID expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 34 (expresion -> ISVOID expresion .)
    LE              reduce using rule 34 (expresion -> ISVOID expresion .)
    =               reduce using rule 34 (expresion -> ISVOID expresion .)
    <               reduce using rule 34 (expresion -> ISVOID expresion .)
    /               reduce using rule 34 (expresion -> ISVOID expresion .)
    *               reduce using rule 34 (expresion -> ISVOID expresion .)
    -               reduce using rule 34 (expresion -> ISVOID expresion .)
    +               reduce using rule 34 (expresion -> ISVOID expresion .)
    OF              reduce using rule 34 (expresion -> ISVOID expresion .)
    LOOP            reduce using rule 34 (expresion -> ISVOID expresion .)
    THEN            reduce using rule 34 (expresion -> ISVOID expresion .)
    )               reduce using rule 34 (expresion -> ISVOID expresion .)
    }               reduce using rule 34 (expresion -> ISVOID expresion .)
    POOL            reduce using rule 34 (expresion -> ISVOID expresion .)
    ELSE            reduce using rule 34 (expresion -> ISVOID expresion .)
    ,               reduce using rule 34 (expresion -> ISVOID expresion .)
    IN              reduce using rule 34 (expresion -> ISVOID expresion .)
    FI              reduce using rule 34 (expresion -> ISVOID expresion .)
    OBJECTID        reduce using rule 34 (expresion -> ISVOID expresion .)
    .               shift and go to state 52
    @               shift and go to state 53


state 73

    (35) expresion -> ~ expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 35 (expresion -> ~ expresion .)
    OF              reduce using rule 35 (expresion -> ~ expresion .)
    LOOP            reduce using rule 35 (expresion -> ~ expresion .)
    THEN            reduce using rule 35 (expresion -> ~ expresion .)
    )               reduce using rule 35 (expresion -> ~ expresion .)
    }               reduce using rule 35 (expresion -> ~ expresion .)
    POOL            reduce using rule 35 (expresion -> ~ expresion .)
    ELSE            reduce using rule 35 (expresion -> ~ expresion .)
    ,               reduce using rule 35 (expresion -> ~ expresion .)
    IN              reduce using rule 35 (expresion -> ~ expresion .)
    FI              reduce using rule 35 (expresion -> ~ expresion .)
    OBJECTID        reduce using rule 35 (expresion -> ~ expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 74

    (14) metodo -> OBJECTID ( ) : TYPEID { expresion . } ;
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    }               shift and go to state 93
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 75

    (29) expresion -> expresion . OBJECTID . ( expresiones , expresion )
    (30) expresion -> expresion . OBJECTID . ( )
    (               shift and go to state 94


state 76

    (31) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 95


state 77

    (37) expresion -> expresion LE expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 37 (expresion -> expresion LE expresion .)
    LE              reduce using rule 37 (expresion -> expresion LE expresion .)
    =               reduce using rule 37 (expresion -> expresion LE expresion .)
    <               reduce using rule 37 (expresion -> expresion LE expresion .)
    OF              reduce using rule 37 (expresion -> expresion LE expresion .)
    LOOP            reduce using rule 37 (expresion -> expresion LE expresion .)
    THEN            reduce using rule 37 (expresion -> expresion LE expresion .)
    )               reduce using rule 37 (expresion -> expresion LE expresion .)
    }               reduce using rule 37 (expresion -> expresion LE expresion .)
    POOL            reduce using rule 37 (expresion -> expresion LE expresion .)
    ELSE            reduce using rule 37 (expresion -> expresion LE expresion .)
    ,               reduce using rule 37 (expresion -> expresion LE expresion .)
    IN              reduce using rule 37 (expresion -> expresion LE expresion .)
    FI              reduce using rule 37 (expresion -> expresion LE expresion .)
    OBJECTID        reduce using rule 37 (expresion -> expresion LE expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 78

    (38) expresion -> expresion = expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 38 (expresion -> expresion = expresion .)
    LE              reduce using rule 38 (expresion -> expresion = expresion .)
    =               reduce using rule 38 (expresion -> expresion = expresion .)
    <               reduce using rule 38 (expresion -> expresion = expresion .)
    OF              reduce using rule 38 (expresion -> expresion = expresion .)
    LOOP            reduce using rule 38 (expresion -> expresion = expresion .)
    THEN            reduce using rule 38 (expresion -> expresion = expresion .)
    )               reduce using rule 38 (expresion -> expresion = expresion .)
    }               reduce using rule 38 (expresion -> expresion = expresion .)
    POOL            reduce using rule 38 (expresion -> expresion = expresion .)
    ELSE            reduce using rule 38 (expresion -> expresion = expresion .)
    ,               reduce using rule 38 (expresion -> expresion = expresion .)
    IN              reduce using rule 38 (expresion -> expresion = expresion .)
    FI              reduce using rule 38 (expresion -> expresion = expresion .)
    OBJECTID        reduce using rule 38 (expresion -> expresion = expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 79

    (39) expresion -> expresion < expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 39 (expresion -> expresion < expresion .)
    LE              reduce using rule 39 (expresion -> expresion < expresion .)
    =               reduce using rule 39 (expresion -> expresion < expresion .)
    <               reduce using rule 39 (expresion -> expresion < expresion .)
    OF              reduce using rule 39 (expresion -> expresion < expresion .)
    LOOP            reduce using rule 39 (expresion -> expresion < expresion .)
    THEN            reduce using rule 39 (expresion -> expresion < expresion .)
    )               reduce using rule 39 (expresion -> expresion < expresion .)
    }               reduce using rule 39 (expresion -> expresion < expresion .)
    POOL            reduce using rule 39 (expresion -> expresion < expresion .)
    ELSE            reduce using rule 39 (expresion -> expresion < expresion .)
    ,               reduce using rule 39 (expresion -> expresion < expresion .)
    IN              reduce using rule 39 (expresion -> expresion < expresion .)
    FI              reduce using rule 39 (expresion -> expresion < expresion .)
    OBJECTID        reduce using rule 39 (expresion -> expresion < expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 80

    (40) expresion -> expresion / expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 40 (expresion -> expresion / expresion .)
    LE              reduce using rule 40 (expresion -> expresion / expresion .)
    =               reduce using rule 40 (expresion -> expresion / expresion .)
    <               reduce using rule 40 (expresion -> expresion / expresion .)
    /               reduce using rule 40 (expresion -> expresion / expresion .)
    *               reduce using rule 40 (expresion -> expresion / expresion .)
    -               reduce using rule 40 (expresion -> expresion / expresion .)
    +               reduce using rule 40 (expresion -> expresion / expresion .)
    OF              reduce using rule 40 (expresion -> expresion / expresion .)
    LOOP            reduce using rule 40 (expresion -> expresion / expresion .)
    THEN            reduce using rule 40 (expresion -> expresion / expresion .)
    )               reduce using rule 40 (expresion -> expresion / expresion .)
    }               reduce using rule 40 (expresion -> expresion / expresion .)
    POOL            reduce using rule 40 (expresion -> expresion / expresion .)
    ELSE            reduce using rule 40 (expresion -> expresion / expresion .)
    ,               reduce using rule 40 (expresion -> expresion / expresion .)
    IN              reduce using rule 40 (expresion -> expresion / expresion .)
    FI              reduce using rule 40 (expresion -> expresion / expresion .)
    OBJECTID        reduce using rule 40 (expresion -> expresion / expresion .)
    .               shift and go to state 52
    @               shift and go to state 53


state 81

    (41) expresion -> expresion * expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 41 (expresion -> expresion * expresion .)
    LE              reduce using rule 41 (expresion -> expresion * expresion .)
    =               reduce using rule 41 (expresion -> expresion * expresion .)
    <               reduce using rule 41 (expresion -> expresion * expresion .)
    /               reduce using rule 41 (expresion -> expresion * expresion .)
    *               reduce using rule 41 (expresion -> expresion * expresion .)
    -               reduce using rule 41 (expresion -> expresion * expresion .)
    +               reduce using rule 41 (expresion -> expresion * expresion .)
    OF              reduce using rule 41 (expresion -> expresion * expresion .)
    LOOP            reduce using rule 41 (expresion -> expresion * expresion .)
    THEN            reduce using rule 41 (expresion -> expresion * expresion .)
    )               reduce using rule 41 (expresion -> expresion * expresion .)
    }               reduce using rule 41 (expresion -> expresion * expresion .)
    POOL            reduce using rule 41 (expresion -> expresion * expresion .)
    ELSE            reduce using rule 41 (expresion -> expresion * expresion .)
    ,               reduce using rule 41 (expresion -> expresion * expresion .)
    IN              reduce using rule 41 (expresion -> expresion * expresion .)
    FI              reduce using rule 41 (expresion -> expresion * expresion .)
    OBJECTID        reduce using rule 41 (expresion -> expresion * expresion .)
    .               shift and go to state 52
    @               shift and go to state 53


state 82

    (42) expresion -> expresion - expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 42 (expresion -> expresion - expresion .)
    LE              reduce using rule 42 (expresion -> expresion - expresion .)
    =               reduce using rule 42 (expresion -> expresion - expresion .)
    <               reduce using rule 42 (expresion -> expresion - expresion .)
    /               reduce using rule 42 (expresion -> expresion - expresion .)
    *               reduce using rule 42 (expresion -> expresion - expresion .)
    -               reduce using rule 42 (expresion -> expresion - expresion .)
    +               reduce using rule 42 (expresion -> expresion - expresion .)
    OF              reduce using rule 42 (expresion -> expresion - expresion .)
    LOOP            reduce using rule 42 (expresion -> expresion - expresion .)
    THEN            reduce using rule 42 (expresion -> expresion - expresion .)
    )               reduce using rule 42 (expresion -> expresion - expresion .)
    }               reduce using rule 42 (expresion -> expresion - expresion .)
    POOL            reduce using rule 42 (expresion -> expresion - expresion .)
    ELSE            reduce using rule 42 (expresion -> expresion - expresion .)
    ,               reduce using rule 42 (expresion -> expresion - expresion .)
    IN              reduce using rule 42 (expresion -> expresion - expresion .)
    FI              reduce using rule 42 (expresion -> expresion - expresion .)
    OBJECTID        reduce using rule 42 (expresion -> expresion - expresion .)
    .               shift and go to state 52
    @               shift and go to state 53


state 83

    (43) expresion -> expresion + expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 43 (expresion -> expresion + expresion .)
    LE              reduce using rule 43 (expresion -> expresion + expresion .)
    =               reduce using rule 43 (expresion -> expresion + expresion .)
    <               reduce using rule 43 (expresion -> expresion + expresion .)
    /               reduce using rule 43 (expresion -> expresion + expresion .)
    *               reduce using rule 43 (expresion -> expresion + expresion .)
    -               reduce using rule 43 (expresion -> expresion + expresion .)
    +               reduce using rule 43 (expresion -> expresion + expresion .)
    OF              reduce using rule 43 (expresion -> expresion + expresion .)
    LOOP            reduce using rule 43 (expresion -> expresion + expresion .)
    THEN            reduce using rule 43 (expresion -> expresion + expresion .)
    )               reduce using rule 43 (expresion -> expresion + expresion .)
    }               reduce using rule 43 (expresion -> expresion + expresion .)
    POOL            reduce using rule 43 (expresion -> expresion + expresion .)
    ELSE            reduce using rule 43 (expresion -> expresion + expresion .)
    ,               reduce using rule 43 (expresion -> expresion + expresion .)
    IN              reduce using rule 43 (expresion -> expresion + expresion .)
    FI              reduce using rule 43 (expresion -> expresion + expresion .)
    OBJECTID        reduce using rule 43 (expresion -> expresion + expresion .)
    .               shift and go to state 52
    @               shift and go to state 53


state 84

    (24) expresion -> { expresion_lista expresion . ; }
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               shift and go to state 96
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 85

    (54) expresion_lista -> espacios expresion . ;
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               shift and go to state 97
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 86

    (25) expresion -> CASE expresion OF . case_list ; ESAC
    (51) case_list -> . case_list OBJECTID : TYPEID DARROW expresion
    (52) case_list -> . OBJECTID : TYPEID DARROW expresion
    OBJECTID        shift and go to state 99

    case_list                      shift and go to state 98

state 87

    (26) expresion -> LET let_declarations IN . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 100

state 88

    (49) let_declarations -> let_declarations , . let_declaration
    (48) let_declaration -> . OBJECTID : TYPEID opt_assign
    OBJECTID        shift and go to state 67

    let_declaration                shift and go to state 101

state 89

    (48) let_declaration -> OBJECTID : . TYPEID opt_assign
    TYPEID          shift and go to state 102


state 90

    (27) expresion -> WHILE expresion LOOP . expresion POOL
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 103

state 91

    (28) expresion -> IF expresion THEN . expresion ELSE expresion FI
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 104

state 92

    (36) expresion -> ( expresion ) .
    ;               reduce using rule 36 (expresion -> ( expresion ) .)
    .               reduce using rule 36 (expresion -> ( expresion ) .)
    @               reduce using rule 36 (expresion -> ( expresion ) .)
    LE              reduce using rule 36 (expresion -> ( expresion ) .)
    =               reduce using rule 36 (expresion -> ( expresion ) .)
    <               reduce using rule 36 (expresion -> ( expresion ) .)
    /               reduce using rule 36 (expresion -> ( expresion ) .)
    *               reduce using rule 36 (expresion -> ( expresion ) .)
    -               reduce using rule 36 (expresion -> ( expresion ) .)
    +               reduce using rule 36 (expresion -> ( expresion ) .)
    OF              reduce using rule 36 (expresion -> ( expresion ) .)
    LOOP            reduce using rule 36 (expresion -> ( expresion ) .)
    THEN            reduce using rule 36 (expresion -> ( expresion ) .)
    )               reduce using rule 36 (expresion -> ( expresion ) .)
    }               reduce using rule 36 (expresion -> ( expresion ) .)
    POOL            reduce using rule 36 (expresion -> ( expresion ) .)
    ELSE            reduce using rule 36 (expresion -> ( expresion ) .)
    ,               reduce using rule 36 (expresion -> ( expresion ) .)
    IN              reduce using rule 36 (expresion -> ( expresion ) .)
    FI              reduce using rule 36 (expresion -> ( expresion ) .)
    OBJECTID        reduce using rule 36 (expresion -> ( expresion ) .)


state 93

    (14) metodo -> OBJECTID ( ) : TYPEID { expresion } . ;
    ;               shift and go to state 105


state 94

    (29) expresion -> expresion . OBJECTID ( . expresiones , expresion )
    (30) expresion -> expresion . OBJECTID ( . )
    (44) expresiones -> .
    (45) expresiones -> . expresiones expresion ,
    )               shift and go to state 107
    ,               reduce using rule 44 (expresiones -> .)
    OBJECTID        reduce using rule 44 (expresiones -> .)
    BOOL_CONST      reduce using rule 44 (expresiones -> .)
    STR_CONST       reduce using rule 44 (expresiones -> .)
    INT_CONST       reduce using rule 44 (expresiones -> .)
    NEW             reduce using rule 44 (expresiones -> .)
    {               reduce using rule 44 (expresiones -> .)
    CASE            reduce using rule 44 (expresiones -> .)
    LET             reduce using rule 44 (expresiones -> .)
    WHILE           reduce using rule 44 (expresiones -> .)
    IF              reduce using rule 44 (expresiones -> .)
    NOT             reduce using rule 44 (expresiones -> .)
    ISVOID          reduce using rule 44 (expresiones -> .)
    ~               reduce using rule 44 (expresiones -> .)
    (               reduce using rule 44 (expresiones -> .)

    expresiones                    shift and go to state 106

state 95

    (31) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 108


state 96

    (24) expresion -> { expresion_lista expresion ; . }
    }               shift and go to state 109


state 97

    (54) expresion_lista -> espacios expresion ; .
    OBJECTID        reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    BOOL_CONST      reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    STR_CONST       reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    INT_CONST       reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    NEW             reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    {               reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    CASE            reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    LET             reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    WHILE           reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    IF              reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    NOT             reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    ISVOID          reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    ~               reduce using rule 54 (expresion_lista -> espacios expresion ; .)
    (               reduce using rule 54 (expresion_lista -> espacios expresion ; .)


state 98

    (25) expresion -> CASE expresion OF case_list . ; ESAC
    (51) case_list -> case_list . OBJECTID : TYPEID DARROW expresion
    ;               shift and go to state 110
    OBJECTID        shift and go to state 111


state 99

    (52) case_list -> OBJECTID . : TYPEID DARROW expresion
    :               shift and go to state 112


state 100

    (26) expresion -> LET let_declarations IN expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    OF              reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    LOOP            reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    THEN            reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    )               reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    }               reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    POOL            reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    ELSE            reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    ,               reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    IN              reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    FI              reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    OBJECTID        reduce using rule 26 (expresion -> LET let_declarations IN expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 101

    (49) let_declarations -> let_declarations , let_declaration .
    IN              reduce using rule 49 (let_declarations -> let_declarations , let_declaration .)
    ,               reduce using rule 49 (let_declarations -> let_declarations , let_declaration .)


state 102

    (48) let_declaration -> OBJECTID : TYPEID . opt_assign
    (46) opt_assign -> . ASSIGN expresion
    (47) opt_assign -> .
    ASSIGN          shift and go to state 114
    IN              reduce using rule 47 (opt_assign -> .)
    ,               reduce using rule 47 (opt_assign -> .)

    opt_assign                     shift and go to state 113

state 103

    (27) expresion -> WHILE expresion LOOP expresion . POOL
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    POOL            shift and go to state 115
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 104

    (28) expresion -> IF expresion THEN expresion . ELSE expresion FI
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ELSE            shift and go to state 116
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 105

    (14) metodo -> OBJECTID ( ) : TYPEID { expresion } ; .
    }               reduce using rule 14 (metodo -> OBJECTID ( ) : TYPEID { expresion } ; .)
    OBJECTID        reduce using rule 14 (metodo -> OBJECTID ( ) : TYPEID { expresion } ; .)


state 106

    (29) expresion -> expresion . OBJECTID ( expresiones . , expresion )
    (45) expresiones -> expresiones . expresion ,
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    ,               shift and go to state 118
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 117

state 107

    (30) expresion -> expresion . OBJECTID ( ) .
    ;               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    .               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    @               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    LE              reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    =               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    <               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    /               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    *               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    -               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    +               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    OF              reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    LOOP            reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    THEN            reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    )               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    }               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    POOL            reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    ELSE            reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    ,               reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    IN              reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    FI              reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)
    OBJECTID        reduce using rule 30 (expresion -> expresion . OBJECTID ( ) .)


state 108

    (31) expresion -> expresion @ TYPEID . OBJECTID . ( expresiones , expresion )
    (32) expresion -> expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 119


state 109

    (24) expresion -> { expresion_lista expresion ; } .
    ;               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    .               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    @               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    LE              reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    =               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    <               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    /               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    *               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    -               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    +               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    OF              reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    LOOP            reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    THEN            reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    )               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    }               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    POOL            reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    ELSE            reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    ,               reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    IN              reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    FI              reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)
    OBJECTID        reduce using rule 24 (expresion -> { expresion_lista expresion ; } .)


state 110

    (25) expresion -> CASE expresion OF case_list ; . ESAC
    ESAC            shift and go to state 120


state 111

    (51) case_list -> case_list OBJECTID . : TYPEID DARROW expresion
    :               shift and go to state 121


state 112

    (52) case_list -> OBJECTID : . TYPEID DARROW expresion
    TYPEID          shift and go to state 122


state 113

    (48) let_declaration -> OBJECTID : TYPEID opt_assign .
    IN              reduce using rule 48 (let_declaration -> OBJECTID : TYPEID opt_assign .)
    ,               reduce using rule 48 (let_declaration -> OBJECTID : TYPEID opt_assign .)


state 114

    (46) opt_assign -> ASSIGN . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 123

state 115

    (27) expresion -> WHILE expresion LOOP expresion POOL .
    ;               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    .               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    @               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    LE              reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    =               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    <               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    /               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    *               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    -               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    +               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    OF              reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    LOOP            reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    THEN            reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    )               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    }               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    POOL            reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    ELSE            reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    ,               reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    IN              reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    FI              reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)
    OBJECTID        reduce using rule 27 (expresion -> WHILE expresion LOOP expresion POOL .)


state 116

    (28) expresion -> IF expresion THEN expresion ELSE . expresion FI
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 124

state 117

    (45) expresiones -> expresiones expresion . ,
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ,               shift and go to state 125
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 118

    (29) expresion -> expresion . OBJECTID ( expresiones , . expresion )
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 126

state 119

    (31) expresion -> expresion @ TYPEID . OBJECTID ( . expresiones , expresion )
    (32) expresion -> expresion @ TYPEID . OBJECTID ( . )
    (44) expresiones -> .
    (45) expresiones -> . expresiones expresion ,
    )               shift and go to state 128
    ,               reduce using rule 44 (expresiones -> .)
    OBJECTID        reduce using rule 44 (expresiones -> .)
    BOOL_CONST      reduce using rule 44 (expresiones -> .)
    STR_CONST       reduce using rule 44 (expresiones -> .)
    INT_CONST       reduce using rule 44 (expresiones -> .)
    NEW             reduce using rule 44 (expresiones -> .)
    {               reduce using rule 44 (expresiones -> .)
    CASE            reduce using rule 44 (expresiones -> .)
    LET             reduce using rule 44 (expresiones -> .)
    WHILE           reduce using rule 44 (expresiones -> .)
    IF              reduce using rule 44 (expresiones -> .)
    NOT             reduce using rule 44 (expresiones -> .)
    ISVOID          reduce using rule 44 (expresiones -> .)
    ~               reduce using rule 44 (expresiones -> .)
    (               reduce using rule 44 (expresiones -> .)

    expresiones                    shift and go to state 127

state 120

    (25) expresion -> CASE expresion OF case_list ; ESAC .
    ;               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    .               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    @               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    LE              reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    =               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    <               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    /               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    *               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    -               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    +               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    OF              reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    LOOP            reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    THEN            reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    )               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    }               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    POOL            reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    ELSE            reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    ,               reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    IN              reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    FI              reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)
    OBJECTID        reduce using rule 25 (expresion -> CASE expresion OF case_list ; ESAC .)


state 121

    (51) case_list -> case_list OBJECTID : . TYPEID DARROW expresion
    TYPEID          shift and go to state 129


state 122

    (52) case_list -> OBJECTID : TYPEID . DARROW expresion
    DARROW          shift and go to state 130


state 123

    (46) opt_assign -> ASSIGN expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    IN              reduce using rule 46 (opt_assign -> ASSIGN expresion .)
    ,               reduce using rule 46 (opt_assign -> ASSIGN expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 124

    (28) expresion -> IF expresion THEN expresion ELSE expresion . FI
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    FI              shift and go to state 131
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 125

    (45) expresiones -> expresiones expresion , .
    ,               reduce using rule 45 (expresiones -> expresiones expresion , .)
    OBJECTID        reduce using rule 45 (expresiones -> expresiones expresion , .)
    BOOL_CONST      reduce using rule 45 (expresiones -> expresiones expresion , .)
    STR_CONST       reduce using rule 45 (expresiones -> expresiones expresion , .)
    INT_CONST       reduce using rule 45 (expresiones -> expresiones expresion , .)
    NEW             reduce using rule 45 (expresiones -> expresiones expresion , .)
    {               reduce using rule 45 (expresiones -> expresiones expresion , .)
    CASE            reduce using rule 45 (expresiones -> expresiones expresion , .)
    LET             reduce using rule 45 (expresiones -> expresiones expresion , .)
    WHILE           reduce using rule 45 (expresiones -> expresiones expresion , .)
    IF              reduce using rule 45 (expresiones -> expresiones expresion , .)
    NOT             reduce using rule 45 (expresiones -> expresiones expresion , .)
    ISVOID          reduce using rule 45 (expresiones -> expresiones expresion , .)
    ~               reduce using rule 45 (expresiones -> expresiones expresion , .)
    (               reduce using rule 45 (expresiones -> expresiones expresion , .)


state 126

    (29) expresion -> expresion . OBJECTID ( expresiones , expresion . )
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    )               shift and go to state 132
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 127

    (31) expresion -> expresion @ TYPEID . OBJECTID ( expresiones . , expresion )
    (45) expresiones -> expresiones . expresion ,
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    ,               shift and go to state 133
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 117

state 128

    (32) expresion -> expresion @ TYPEID . OBJECTID ( ) .
    ;               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    OBJECTID        reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)


state 129

    (51) case_list -> case_list OBJECTID : TYPEID . DARROW expresion
    DARROW          shift and go to state 134


state 130

    (52) case_list -> OBJECTID : TYPEID DARROW . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 135

state 131

    (28) expresion -> IF expresion THEN expresion ELSE expresion FI .
    ;               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    .               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    @               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LE              reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    =               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    <               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    /               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    *               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    -               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    +               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    OF              reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LOOP            reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    THEN            reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    )               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    }               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    POOL            reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ELSE            reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ,               reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    IN              reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    FI              reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    OBJECTID        reduce using rule 28 (expresion -> IF expresion THEN expresion ELSE expresion FI .)


state 132

    (29) expresion -> expresion . OBJECTID ( expresiones , expresion ) .
    ;               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    .               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    @               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    LE              reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    =               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    <               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    /               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    *               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    -               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    +               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    OF              reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    LOOP            reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    THEN            reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    )               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    }               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    POOL            reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    ELSE            reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    ,               reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    IN              reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    FI              reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)
    OBJECTID        reduce using rule 29 (expresion -> expresion . OBJECTID ( expresiones , expresion ) .)


state 133

    (31) expresion -> expresion @ TYPEID . OBJECTID ( expresiones , . expresion )
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 136

state 134

    (51) case_list -> case_list OBJECTID : TYPEID DARROW . expresion
    (19) expresion -> . OBJECTID
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . NEW TYPEID
    (24) expresion -> . { expresion_lista expresion ; }
    (25) expresion -> . CASE expresion OF case_list ; ESAC
    (26) expresion -> . LET let_declarations IN expresion
    (27) expresion -> . WHILE expresion LOOP expresion POOL
    (28) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (29) expresion -> . expresion . OBJECTID ( expresiones , expresion )
    (30) expresion -> . expresion . OBJECTID ( )
    (31) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (33) expresion -> . NOT expresion
    (34) expresion -> . ISVOID expresion
    (35) expresion -> . ~ expresion
    (36) expresion -> . ( expresion )
    (37) expresion -> . expresion LE expresion
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion < expresion
    (40) expresion -> . expresion / expresion
    (41) expresion -> . expresion * expresion
    (42) expresion -> . expresion - expresion
    (43) expresion -> . expresion + expresion
    OBJECTID        shift and go to state 35
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    NEW             shift and go to state 40
    {               shift and go to state 41
    CASE            shift and go to state 42
    LET             shift and go to state 43
    WHILE           shift and go to state 44
    IF              shift and go to state 45
    NOT             shift and go to state 47
    ISVOID          shift and go to state 48
    ~               shift and go to state 49
    (               shift and go to state 46

    expresion                      shift and go to state 137

state 135

    (52) case_list -> OBJECTID : TYPEID DARROW expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 52 (case_list -> OBJECTID : TYPEID DARROW expresion .)
    OBJECTID        reduce using rule 52 (case_list -> OBJECTID : TYPEID DARROW expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 136

    (31) expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion . )
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    )               shift and go to state 138
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 137

    (51) case_list -> case_list OBJECTID : TYPEID DARROW expresion .
    (29) expresion -> expresion . . OBJECTID ( expresiones , expresion )
    (30) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones , expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (37) expresion -> expresion . LE expresion
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . < expresion
    (40) expresion -> expresion . / expresion
    (41) expresion -> expresion . * expresion
    (42) expresion -> expresion . - expresion
    (43) expresion -> expresion . + expresion
    ;               reduce using rule 51 (case_list -> case_list OBJECTID : TYPEID DARROW expresion .)
    OBJECTID        reduce using rule 51 (case_list -> case_list OBJECTID : TYPEID DARROW expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    LE              shift and go to state 54
    =               shift and go to state 55
    <               shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 138

    (31) expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .
    ;               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    .               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    @               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    LE              reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    =               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    <               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    /               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    *               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    -               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    +               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    OF              reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    LOOP            reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    THEN            reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    )               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    }               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    POOL            reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    ELSE            reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    ,               reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    IN              reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    FI              reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)
    OBJECTID        reduce using rule 31 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones , expresion ) .)


Conflicts:

shift/reduce conflict for . in state 73 resolved as shift
shift/reduce conflict for @ in state 73 resolved as shift
shift/reduce conflict for LE in state 73 resolved as shift
shift/reduce conflict for = in state 73 resolved as shift
shift/reduce conflict for < in state 73 resolved as shift
shift/reduce conflict for / in state 73 resolved as shift
shift/reduce conflict for * in state 73 resolved as shift
shift/reduce conflict for - in state 73 resolved as shift
shift/reduce conflict for + in state 73 resolved as shift
shift/reduce conflict for . in state 100 resolved as shift
shift/reduce conflict for @ in state 100 resolved as shift
shift/reduce conflict for LE in state 100 resolved as shift
shift/reduce conflict for = in state 100 resolved as shift
shift/reduce conflict for < in state 100 resolved as shift
shift/reduce conflict for / in state 100 resolved as shift
shift/reduce conflict for * in state 100 resolved as shift
shift/reduce conflict for - in state 100 resolved as shift
shift/reduce conflict for + in state 100 resolved as shift
reduce/reduce conflict in state 8 resolved using rule atributos -> <empty>
rejected rule (metodos -> <empty>) in state 8
reduce/reduce conflict in state 12 resolved using rule atributos -> <empty>
rejected rule (metodos -> <empty>) in state 12
Rule (metodos -> <empty>) is never reduced