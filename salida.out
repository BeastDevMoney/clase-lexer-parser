Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> clases
Rule 2     clases -> clases clase
Rule 3     clases -> clase
Rule 4     clase -> CLASS TYPEID atributosHeredados { atributos } ;
Rule 5     atributosHeredados -> <empty>
Rule 6     atributosHeredados -> INHERITS TYPEID
Rule 7     atributos -> <empty>
Rule 8     atributos -> atributos atributo
Rule 9     atributo -> OBJECTID : TYPEID ;
Rule 10    atributo -> metodo
Rule 11    atributo -> atributo
Rule 12    metodo -> OBJECTID ( formales ) : TYPEID { expresion } ;
Rule 13    formales -> <empty>
Rule 14    formales -> formales , formal
Rule 15    formales -> formal
Rule 16    formal -> OBJECTID : TYPEID
Rule 17    expresion -> NUMBER
Rule 18    expresion -> BOOL_CONST
Rule 19    expresion -> STR_CONST
Rule 20    expresion -> INT_CONST
Rule 21    expresion -> OBJECTID
Rule 22    expresion -> NEW TYPEID
Rule 23    expresion -> { llaves_rep }
Rule 24    expresion -> CASE expresion OF case_list ESAC
Rule 25    expresion -> LET let_declarations IN expresion
Rule 26    expresion -> WHILE expresion LOOP expresion POOL
Rule 27    expresion -> IF expresion THEN expresion ELSE expresion FI
Rule 28    expresion -> expresion . OBJECTID ( )
Rule 29    expresion -> OBJECTID ( )
Rule 30    expresion -> OBJECTID ( expresiones expresion )
Rule 31    expresion -> expresion . OBJECTID ( expresiones expresion )
Rule 32    expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion )
Rule 33    expresion -> expresion @ TYPEID . OBJECTID ( )
Rule 34    expresion -> ~ expresion  [precedence=left, level=7]
Rule 35    expresion -> ISVOID expresion  [precedence=left, level=6]
Rule 36    expresion -> NOT expresion  [precedence=left, level=2]
Rule 37    expresion -> ( expresion )
Rule 38    expresion -> expresion = expresion  [precedence=nonassoc, level=3]
Rule 39    expresion -> expresion LE expresion  [precedence=nonassoc, level=3]
Rule 40    expresion -> expresion < expresion  [precedence=nonassoc, level=3]
Rule 41    expresion -> expresion / expresion  [precedence=left, level=5]
Rule 42    expresion -> expresion * expresion  [precedence=left, level=5]
Rule 43    expresion -> expresion - expresion  [precedence=left, level=4]
Rule 44    expresion -> expresion + expresion  [precedence=left, level=4]
Rule 45    expresion -> OBJECTID ASSIGN expresion  [precedence=right, level=1]
Rule 46    expresiones -> <empty>
Rule 47    expresiones -> expresiones expresion ,
Rule 48    let_declaration -> OBJECTID : TYPEID opt_assign
Rule 49    let_declarations -> let_declarations , let_declaration
Rule 50    let_declarations -> let_declaration
Rule 51    opt_assign -> <empty>
Rule 52    opt_assign -> ASSIGN expresion  [precedence=right, level=1]
Rule 53    case_list -> case_list OBJECTID : TYPEID DARROW expresion ;
Rule 54    case_list -> OBJECTID : TYPEID DARROW expresion ;
Rule 55    llaves_rep -> expresion ;
Rule 56    llaves_rep -> llaves_rep expresion ;

Terminals, with rules where they appear:

(                    : 12 28 29 30 31 32 33 37
)                    : 12 28 29 30 31 32 33 37
*                    : 42
+                    : 44
,                    : 14 47 49
-                    : 43
.                    : 28 31 32 33
/                    : 41
:                    : 9 12 16 48 53 54
;                    : 4 9 12 53 54 55 56
<                    : 40
=                    : 38
@                    : 32 33
ASSIGN               : 45 52
BOOL_CONST           : 18
CASE                 : 24
CLASS                : 4
DARROW               : 53 54
ELSE                 : 27
ESAC                 : 24
FI                   : 27
IF                   : 27
IN                   : 25
INHERITS             : 6
INT_CONST            : 20
ISVOID               : 35
LE                   : 39
LET                  : 25
LOOP                 : 26
NEW                  : 22
NOT                  : 36
NUMBER               : 17
OBJECTID             : 9 12 16 21 28 29 30 31 32 33 45 48 53 54
OF                   : 24
POOL                 : 26
STR_CONST            : 19
THEN                 : 27
TYPEID               : 4 6 9 12 16 22 32 33 48 53 54
WHILE                : 26
error                : 
{                    : 4 12 23
}                    : 4 12 23
~                    : 34

Nonterminals, with rules where they appear:

Programa             : 0
atributo             : 8 11
atributos            : 4 8
atributosHeredados   : 4
case_list            : 24 53
clase                : 2 3
clases               : 1 2
expresion            : 12 24 25 26 26 27 27 27 28 30 31 31 32 32 33 34 35 36 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 47 52 53 54 55 56
expresiones          : 30 31 32 47
formal               : 14 15
formales             : 12 14
let_declaration      : 49 50
let_declarations     : 25 49
llaves_rep           : 23 56
metodo               : 10
opt_assign           : 48


state 0

    (0) S' -> . Programa
    (1) Programa -> . clases
    (2) clases -> . clases clase
    (3) clases -> . clase
    (4) clase -> . CLASS TYPEID atributosHeredados { atributos } ;
    CLASS           shift and go to state 4

    Programa                       shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> Programa .


state 2

    (1) Programa -> clases .
    (2) clases -> clases . clase
    (4) clase -> . CLASS TYPEID atributosHeredados { atributos } ;
    $end            reduce using rule 1 (Programa -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase .
    CLASS           reduce using rule 3 (clases -> clase .)
    $end            reduce using rule 3 (clases -> clase .)


state 4

    (4) clase -> CLASS . TYPEID atributosHeredados { atributos } ;
    TYPEID          shift and go to state 6


state 5

    (2) clases -> clases clase .
    CLASS           reduce using rule 2 (clases -> clases clase .)
    $end            reduce using rule 2 (clases -> clases clase .)


state 6

    (4) clase -> CLASS TYPEID . atributosHeredados { atributos } ;
    (5) atributosHeredados -> .
    (6) atributosHeredados -> . INHERITS TYPEID
    {               reduce using rule 5 (atributosHeredados -> .)
    INHERITS        shift and go to state 8

    atributosHeredados             shift and go to state 7

state 7

    (4) clase -> CLASS TYPEID atributosHeredados . { atributos } ;
    {               shift and go to state 9


state 8

    (6) atributosHeredados -> INHERITS . TYPEID
    TYPEID          shift and go to state 10


state 9

    (4) clase -> CLASS TYPEID atributosHeredados { . atributos } ;
    (7) atributos -> .
    (8) atributos -> . atributos atributo
    }               reduce using rule 7 (atributos -> .)
    OBJECTID        reduce using rule 7 (atributos -> .)

    atributos                      shift and go to state 11

state 10

    (6) atributosHeredados -> INHERITS TYPEID .
    {               reduce using rule 6 (atributosHeredados -> INHERITS TYPEID .)


state 11

    (4) clase -> CLASS TYPEID atributosHeredados { atributos . } ;
    (8) atributos -> atributos . atributo
    (9) atributo -> . OBJECTID : TYPEID ;
    (10) atributo -> . metodo
    (11) atributo -> . atributo
    (12) metodo -> . OBJECTID ( formales ) : TYPEID { expresion } ;
    }               shift and go to state 12
    OBJECTID        shift and go to state 14

    atributo                       shift and go to state 13
    metodo                         shift and go to state 15

state 12

    (4) clase -> CLASS TYPEID atributosHeredados { atributos } . ;
    ;               shift and go to state 16


state 13

    (8) atributos -> atributos atributo .
    (11) atributo -> atributo .
  ! reduce/reduce conflict for } resolved using rule 8 (atributos -> atributos atributo .)
  ! reduce/reduce conflict for OBJECTID resolved using rule 8 (atributos -> atributos atributo .)
    }               reduce using rule 8 (atributos -> atributos atributo .)
    OBJECTID        reduce using rule 8 (atributos -> atributos atributo .)


state 14

    (9) atributo -> OBJECTID . : TYPEID ;
    (12) metodo -> OBJECTID . ( formales ) : TYPEID { expresion } ;
    :               shift and go to state 17
    (               shift and go to state 18


state 15

    (10) atributo -> metodo .
    }               reduce using rule 10 (atributo -> metodo .)
    OBJECTID        reduce using rule 10 (atributo -> metodo .)


state 16

    (4) clase -> CLASS TYPEID atributosHeredados { atributos } ; .
    CLASS           reduce using rule 4 (clase -> CLASS TYPEID atributosHeredados { atributos } ; .)
    $end            reduce using rule 4 (clase -> CLASS TYPEID atributosHeredados { atributos } ; .)


state 17

    (9) atributo -> OBJECTID : . TYPEID ;
    TYPEID          shift and go to state 19


state 18

    (12) metodo -> OBJECTID ( . formales ) : TYPEID { expresion } ;
    (13) formales -> .
    (14) formales -> . formales , formal
    (15) formales -> . formal
    (16) formal -> . OBJECTID : TYPEID
    )               reduce using rule 13 (formales -> .)
    ,               reduce using rule 13 (formales -> .)
    OBJECTID        shift and go to state 20

    formales                       shift and go to state 21
    formal                         shift and go to state 22

state 19

    (9) atributo -> OBJECTID : TYPEID . ;
    ;               shift and go to state 23


state 20

    (16) formal -> OBJECTID . : TYPEID
    :               shift and go to state 24


state 21

    (12) metodo -> OBJECTID ( formales . ) : TYPEID { expresion } ;
    (14) formales -> formales . , formal
    )               shift and go to state 25
    ,               shift and go to state 26


state 22

    (15) formales -> formal .
    )               reduce using rule 15 (formales -> formal .)
    ,               reduce using rule 15 (formales -> formal .)


state 23

    (9) atributo -> OBJECTID : TYPEID ; .
    }               reduce using rule 9 (atributo -> OBJECTID : TYPEID ; .)
    OBJECTID        reduce using rule 9 (atributo -> OBJECTID : TYPEID ; .)


state 24

    (16) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 27


state 25

    (12) metodo -> OBJECTID ( formales ) . : TYPEID { expresion } ;
    :               shift and go to state 28


state 26

    (14) formales -> formales , . formal
    (16) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 20

    formal                         shift and go to state 29

state 27

    (16) formal -> OBJECTID : TYPEID .
    )               reduce using rule 16 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 16 (formal -> OBJECTID : TYPEID .)


state 28

    (12) metodo -> OBJECTID ( formales ) : . TYPEID { expresion } ;
    TYPEID          shift and go to state 30


state 29

    (14) formales -> formales , formal .
    )               reduce using rule 14 (formales -> formales , formal .)
    ,               reduce using rule 14 (formales -> formales , formal .)


state 30

    (12) metodo -> OBJECTID ( formales ) : TYPEID . { expresion } ;
    {               shift and go to state 31


state 31

    (12) metodo -> OBJECTID ( formales ) : TYPEID { . expresion } ;
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 35

state 32

    (21) expresion -> OBJECTID .
    (29) expresion -> OBJECTID . ( )
    (30) expresion -> OBJECTID . ( expresiones expresion )
    (45) expresion -> OBJECTID . ASSIGN expresion
    }               reduce using rule 21 (expresion -> OBJECTID .)
    .               reduce using rule 21 (expresion -> OBJECTID .)
    @               reduce using rule 21 (expresion -> OBJECTID .)
    =               reduce using rule 21 (expresion -> OBJECTID .)
    LE              reduce using rule 21 (expresion -> OBJECTID .)
    <               reduce using rule 21 (expresion -> OBJECTID .)
    /               reduce using rule 21 (expresion -> OBJECTID .)
    *               reduce using rule 21 (expresion -> OBJECTID .)
    -               reduce using rule 21 (expresion -> OBJECTID .)
    +               reduce using rule 21 (expresion -> OBJECTID .)
    )               reduce using rule 21 (expresion -> OBJECTID .)
    ;               reduce using rule 21 (expresion -> OBJECTID .)
    OF              reduce using rule 21 (expresion -> OBJECTID .)
    LOOP            reduce using rule 21 (expresion -> OBJECTID .)
    THEN            reduce using rule 21 (expresion -> OBJECTID .)
    ,               reduce using rule 21 (expresion -> OBJECTID .)
    POOL            reduce using rule 21 (expresion -> OBJECTID .)
    ELSE            reduce using rule 21 (expresion -> OBJECTID .)
    IN              reduce using rule 21 (expresion -> OBJECTID .)
    FI              reduce using rule 21 (expresion -> OBJECTID .)
    (               shift and go to state 48
    ASSIGN          shift and go to state 49


state 33

    (37) expresion -> ( . expresion )
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 50

state 34

    (23) expresion -> { . llaves_rep }
    (55) llaves_rep -> . expresion ;
    (56) llaves_rep -> . llaves_rep expresion ;
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    llaves_rep                     shift and go to state 51
    expresion                      shift and go to state 52

state 35

    (12) metodo -> OBJECTID ( formales ) : TYPEID { expresion . } ;
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               shift and go to state 53
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 36

    (17) expresion -> NUMBER .
    }               reduce using rule 17 (expresion -> NUMBER .)
    .               reduce using rule 17 (expresion -> NUMBER .)
    @               reduce using rule 17 (expresion -> NUMBER .)
    =               reduce using rule 17 (expresion -> NUMBER .)
    LE              reduce using rule 17 (expresion -> NUMBER .)
    <               reduce using rule 17 (expresion -> NUMBER .)
    /               reduce using rule 17 (expresion -> NUMBER .)
    *               reduce using rule 17 (expresion -> NUMBER .)
    -               reduce using rule 17 (expresion -> NUMBER .)
    +               reduce using rule 17 (expresion -> NUMBER .)
    )               reduce using rule 17 (expresion -> NUMBER .)
    ;               reduce using rule 17 (expresion -> NUMBER .)
    OF              reduce using rule 17 (expresion -> NUMBER .)
    LOOP            reduce using rule 17 (expresion -> NUMBER .)
    THEN            reduce using rule 17 (expresion -> NUMBER .)
    ,               reduce using rule 17 (expresion -> NUMBER .)
    POOL            reduce using rule 17 (expresion -> NUMBER .)
    ELSE            reduce using rule 17 (expresion -> NUMBER .)
    IN              reduce using rule 17 (expresion -> NUMBER .)
    FI              reduce using rule 17 (expresion -> NUMBER .)


state 37

    (18) expresion -> BOOL_CONST .
    }               reduce using rule 18 (expresion -> BOOL_CONST .)
    .               reduce using rule 18 (expresion -> BOOL_CONST .)
    @               reduce using rule 18 (expresion -> BOOL_CONST .)
    =               reduce using rule 18 (expresion -> BOOL_CONST .)
    LE              reduce using rule 18 (expresion -> BOOL_CONST .)
    <               reduce using rule 18 (expresion -> BOOL_CONST .)
    /               reduce using rule 18 (expresion -> BOOL_CONST .)
    *               reduce using rule 18 (expresion -> BOOL_CONST .)
    -               reduce using rule 18 (expresion -> BOOL_CONST .)
    +               reduce using rule 18 (expresion -> BOOL_CONST .)
    )               reduce using rule 18 (expresion -> BOOL_CONST .)
    ;               reduce using rule 18 (expresion -> BOOL_CONST .)
    OF              reduce using rule 18 (expresion -> BOOL_CONST .)
    LOOP            reduce using rule 18 (expresion -> BOOL_CONST .)
    THEN            reduce using rule 18 (expresion -> BOOL_CONST .)
    ,               reduce using rule 18 (expresion -> BOOL_CONST .)
    POOL            reduce using rule 18 (expresion -> BOOL_CONST .)
    ELSE            reduce using rule 18 (expresion -> BOOL_CONST .)
    IN              reduce using rule 18 (expresion -> BOOL_CONST .)
    FI              reduce using rule 18 (expresion -> BOOL_CONST .)


state 38

    (19) expresion -> STR_CONST .
    }               reduce using rule 19 (expresion -> STR_CONST .)
    .               reduce using rule 19 (expresion -> STR_CONST .)
    @               reduce using rule 19 (expresion -> STR_CONST .)
    =               reduce using rule 19 (expresion -> STR_CONST .)
    LE              reduce using rule 19 (expresion -> STR_CONST .)
    <               reduce using rule 19 (expresion -> STR_CONST .)
    /               reduce using rule 19 (expresion -> STR_CONST .)
    *               reduce using rule 19 (expresion -> STR_CONST .)
    -               reduce using rule 19 (expresion -> STR_CONST .)
    +               reduce using rule 19 (expresion -> STR_CONST .)
    )               reduce using rule 19 (expresion -> STR_CONST .)
    ;               reduce using rule 19 (expresion -> STR_CONST .)
    OF              reduce using rule 19 (expresion -> STR_CONST .)
    LOOP            reduce using rule 19 (expresion -> STR_CONST .)
    THEN            reduce using rule 19 (expresion -> STR_CONST .)
    ,               reduce using rule 19 (expresion -> STR_CONST .)
    POOL            reduce using rule 19 (expresion -> STR_CONST .)
    ELSE            reduce using rule 19 (expresion -> STR_CONST .)
    IN              reduce using rule 19 (expresion -> STR_CONST .)
    FI              reduce using rule 19 (expresion -> STR_CONST .)


state 39

    (20) expresion -> INT_CONST .
    }               reduce using rule 20 (expresion -> INT_CONST .)
    .               reduce using rule 20 (expresion -> INT_CONST .)
    @               reduce using rule 20 (expresion -> INT_CONST .)
    =               reduce using rule 20 (expresion -> INT_CONST .)
    LE              reduce using rule 20 (expresion -> INT_CONST .)
    <               reduce using rule 20 (expresion -> INT_CONST .)
    /               reduce using rule 20 (expresion -> INT_CONST .)
    *               reduce using rule 20 (expresion -> INT_CONST .)
    -               reduce using rule 20 (expresion -> INT_CONST .)
    +               reduce using rule 20 (expresion -> INT_CONST .)
    )               reduce using rule 20 (expresion -> INT_CONST .)
    ;               reduce using rule 20 (expresion -> INT_CONST .)
    OF              reduce using rule 20 (expresion -> INT_CONST .)
    LOOP            reduce using rule 20 (expresion -> INT_CONST .)
    THEN            reduce using rule 20 (expresion -> INT_CONST .)
    ,               reduce using rule 20 (expresion -> INT_CONST .)
    POOL            reduce using rule 20 (expresion -> INT_CONST .)
    ELSE            reduce using rule 20 (expresion -> INT_CONST .)
    IN              reduce using rule 20 (expresion -> INT_CONST .)
    FI              reduce using rule 20 (expresion -> INT_CONST .)


state 40

    (22) expresion -> NEW . TYPEID
    TYPEID          shift and go to state 63


state 41

    (24) expresion -> CASE . expresion OF case_list ESAC
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 64

state 42

    (25) expresion -> LET . let_declarations IN expresion
    (49) let_declarations -> . let_declarations , let_declaration
    (50) let_declarations -> . let_declaration
    (48) let_declaration -> . OBJECTID : TYPEID opt_assign
    OBJECTID        shift and go to state 67

    let_declarations               shift and go to state 65
    let_declaration                shift and go to state 66

state 43

    (26) expresion -> WHILE . expresion LOOP expresion POOL
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 68

state 44

    (27) expresion -> IF . expresion THEN expresion ELSE expresion FI
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 69

state 45

    (34) expresion -> ~ . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 70

state 46

    (35) expresion -> ISVOID . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 71

state 47

    (36) expresion -> NOT . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 72

state 48

    (29) expresion -> OBJECTID ( . )
    (30) expresion -> OBJECTID ( . expresiones expresion )
    (46) expresiones -> .
    (47) expresiones -> . expresiones expresion ,
    )               shift and go to state 73
    NUMBER          reduce using rule 46 (expresiones -> .)
    BOOL_CONST      reduce using rule 46 (expresiones -> .)
    STR_CONST       reduce using rule 46 (expresiones -> .)
    INT_CONST       reduce using rule 46 (expresiones -> .)
    OBJECTID        reduce using rule 46 (expresiones -> .)
    NEW             reduce using rule 46 (expresiones -> .)
    {               reduce using rule 46 (expresiones -> .)
    CASE            reduce using rule 46 (expresiones -> .)
    LET             reduce using rule 46 (expresiones -> .)
    WHILE           reduce using rule 46 (expresiones -> .)
    IF              reduce using rule 46 (expresiones -> .)
    ~               reduce using rule 46 (expresiones -> .)
    ISVOID          reduce using rule 46 (expresiones -> .)
    NOT             reduce using rule 46 (expresiones -> .)
    (               reduce using rule 46 (expresiones -> .)

    expresiones                    shift and go to state 74

state 49

    (45) expresion -> OBJECTID ASSIGN . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 75

state 50

    (37) expresion -> ( expresion . )
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    )               shift and go to state 76
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 51

    (23) expresion -> { llaves_rep . }
    (56) llaves_rep -> llaves_rep . expresion ;
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    }               shift and go to state 77
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 78

state 52

    (55) llaves_rep -> expresion . ;
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    ;               shift and go to state 79
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 53

    (12) metodo -> OBJECTID ( formales ) : TYPEID { expresion } . ;
    ;               shift and go to state 80


state 54

    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    OBJECTID        shift and go to state 81


state 55

    (32) expresion -> expresion @ . TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 82


state 56

    (38) expresion -> expresion = . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 83

state 57

    (39) expresion -> expresion LE . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 84

state 58

    (40) expresion -> expresion < . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 85

state 59

    (41) expresion -> expresion / . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 86

state 60

    (42) expresion -> expresion * . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 87

state 61

    (43) expresion -> expresion - . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 88

state 62

    (44) expresion -> expresion + . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 89

state 63

    (22) expresion -> NEW TYPEID .
    }               reduce using rule 22 (expresion -> NEW TYPEID .)
    .               reduce using rule 22 (expresion -> NEW TYPEID .)
    @               reduce using rule 22 (expresion -> NEW TYPEID .)
    =               reduce using rule 22 (expresion -> NEW TYPEID .)
    LE              reduce using rule 22 (expresion -> NEW TYPEID .)
    <               reduce using rule 22 (expresion -> NEW TYPEID .)
    /               reduce using rule 22 (expresion -> NEW TYPEID .)
    *               reduce using rule 22 (expresion -> NEW TYPEID .)
    -               reduce using rule 22 (expresion -> NEW TYPEID .)
    +               reduce using rule 22 (expresion -> NEW TYPEID .)
    )               reduce using rule 22 (expresion -> NEW TYPEID .)
    ;               reduce using rule 22 (expresion -> NEW TYPEID .)
    OF              reduce using rule 22 (expresion -> NEW TYPEID .)
    LOOP            reduce using rule 22 (expresion -> NEW TYPEID .)
    THEN            reduce using rule 22 (expresion -> NEW TYPEID .)
    ,               reduce using rule 22 (expresion -> NEW TYPEID .)
    POOL            reduce using rule 22 (expresion -> NEW TYPEID .)
    ELSE            reduce using rule 22 (expresion -> NEW TYPEID .)
    IN              reduce using rule 22 (expresion -> NEW TYPEID .)
    FI              reduce using rule 22 (expresion -> NEW TYPEID .)


state 64

    (24) expresion -> CASE expresion . OF case_list ESAC
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    OF              shift and go to state 90
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 65

    (25) expresion -> LET let_declarations . IN expresion
    (49) let_declarations -> let_declarations . , let_declaration
    IN              shift and go to state 91
    ,               shift and go to state 92


state 66

    (50) let_declarations -> let_declaration .
    IN              reduce using rule 50 (let_declarations -> let_declaration .)
    ,               reduce using rule 50 (let_declarations -> let_declaration .)


state 67

    (48) let_declaration -> OBJECTID . : TYPEID opt_assign
    :               shift and go to state 93


state 68

    (26) expresion -> WHILE expresion . LOOP expresion POOL
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    LOOP            shift and go to state 94
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 69

    (27) expresion -> IF expresion . THEN expresion ELSE expresion FI
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    THEN            shift and go to state 95
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 70

    (34) expresion -> ~ expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 34 (expresion -> ~ expresion .)
    =               reduce using rule 34 (expresion -> ~ expresion .)
    LE              reduce using rule 34 (expresion -> ~ expresion .)
    <               reduce using rule 34 (expresion -> ~ expresion .)
    /               reduce using rule 34 (expresion -> ~ expresion .)
    *               reduce using rule 34 (expresion -> ~ expresion .)
    -               reduce using rule 34 (expresion -> ~ expresion .)
    +               reduce using rule 34 (expresion -> ~ expresion .)
    )               reduce using rule 34 (expresion -> ~ expresion .)
    ;               reduce using rule 34 (expresion -> ~ expresion .)
    OF              reduce using rule 34 (expresion -> ~ expresion .)
    LOOP            reduce using rule 34 (expresion -> ~ expresion .)
    THEN            reduce using rule 34 (expresion -> ~ expresion .)
    ,               reduce using rule 34 (expresion -> ~ expresion .)
    POOL            reduce using rule 34 (expresion -> ~ expresion .)
    ELSE            reduce using rule 34 (expresion -> ~ expresion .)
    IN              reduce using rule 34 (expresion -> ~ expresion .)
    FI              reduce using rule 34 (expresion -> ~ expresion .)
    .               shift and go to state 54
    @               shift and go to state 55


state 71

    (35) expresion -> ISVOID expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 35 (expresion -> ISVOID expresion .)
    =               reduce using rule 35 (expresion -> ISVOID expresion .)
    LE              reduce using rule 35 (expresion -> ISVOID expresion .)
    <               reduce using rule 35 (expresion -> ISVOID expresion .)
    /               reduce using rule 35 (expresion -> ISVOID expresion .)
    *               reduce using rule 35 (expresion -> ISVOID expresion .)
    -               reduce using rule 35 (expresion -> ISVOID expresion .)
    +               reduce using rule 35 (expresion -> ISVOID expresion .)
    )               reduce using rule 35 (expresion -> ISVOID expresion .)
    ;               reduce using rule 35 (expresion -> ISVOID expresion .)
    OF              reduce using rule 35 (expresion -> ISVOID expresion .)
    LOOP            reduce using rule 35 (expresion -> ISVOID expresion .)
    THEN            reduce using rule 35 (expresion -> ISVOID expresion .)
    ,               reduce using rule 35 (expresion -> ISVOID expresion .)
    POOL            reduce using rule 35 (expresion -> ISVOID expresion .)
    ELSE            reduce using rule 35 (expresion -> ISVOID expresion .)
    IN              reduce using rule 35 (expresion -> ISVOID expresion .)
    FI              reduce using rule 35 (expresion -> ISVOID expresion .)
    .               shift and go to state 54
    @               shift and go to state 55


state 72

    (36) expresion -> NOT expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 36 (expresion -> NOT expresion .)
    )               reduce using rule 36 (expresion -> NOT expresion .)
    ;               reduce using rule 36 (expresion -> NOT expresion .)
    OF              reduce using rule 36 (expresion -> NOT expresion .)
    LOOP            reduce using rule 36 (expresion -> NOT expresion .)
    THEN            reduce using rule 36 (expresion -> NOT expresion .)
    ,               reduce using rule 36 (expresion -> NOT expresion .)
    POOL            reduce using rule 36 (expresion -> NOT expresion .)
    ELSE            reduce using rule 36 (expresion -> NOT expresion .)
    IN              reduce using rule 36 (expresion -> NOT expresion .)
    FI              reduce using rule 36 (expresion -> NOT expresion .)
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 73

    (29) expresion -> OBJECTID ( ) .
    }               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    .               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    @               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    =               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    LE              reduce using rule 29 (expresion -> OBJECTID ( ) .)
    <               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    /               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    *               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    -               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    +               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    )               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    ;               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    OF              reduce using rule 29 (expresion -> OBJECTID ( ) .)
    LOOP            reduce using rule 29 (expresion -> OBJECTID ( ) .)
    THEN            reduce using rule 29 (expresion -> OBJECTID ( ) .)
    ,               reduce using rule 29 (expresion -> OBJECTID ( ) .)
    POOL            reduce using rule 29 (expresion -> OBJECTID ( ) .)
    ELSE            reduce using rule 29 (expresion -> OBJECTID ( ) .)
    IN              reduce using rule 29 (expresion -> OBJECTID ( ) .)
    FI              reduce using rule 29 (expresion -> OBJECTID ( ) .)


state 74

    (30) expresion -> OBJECTID ( expresiones . expresion )
    (47) expresiones -> expresiones . expresion ,
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 96

state 75

    (45) expresion -> OBJECTID ASSIGN expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    )               reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    ;               reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    OF              reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    LOOP            reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    THEN            reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    ,               reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    POOL            reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    ELSE            reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    IN              reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    FI              reduce using rule 45 (expresion -> OBJECTID ASSIGN expresion .)
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 76

    (37) expresion -> ( expresion ) .
    }               reduce using rule 37 (expresion -> ( expresion ) .)
    .               reduce using rule 37 (expresion -> ( expresion ) .)
    @               reduce using rule 37 (expresion -> ( expresion ) .)
    =               reduce using rule 37 (expresion -> ( expresion ) .)
    LE              reduce using rule 37 (expresion -> ( expresion ) .)
    <               reduce using rule 37 (expresion -> ( expresion ) .)
    /               reduce using rule 37 (expresion -> ( expresion ) .)
    *               reduce using rule 37 (expresion -> ( expresion ) .)
    -               reduce using rule 37 (expresion -> ( expresion ) .)
    +               reduce using rule 37 (expresion -> ( expresion ) .)
    )               reduce using rule 37 (expresion -> ( expresion ) .)
    ;               reduce using rule 37 (expresion -> ( expresion ) .)
    OF              reduce using rule 37 (expresion -> ( expresion ) .)
    LOOP            reduce using rule 37 (expresion -> ( expresion ) .)
    THEN            reduce using rule 37 (expresion -> ( expresion ) .)
    ,               reduce using rule 37 (expresion -> ( expresion ) .)
    POOL            reduce using rule 37 (expresion -> ( expresion ) .)
    ELSE            reduce using rule 37 (expresion -> ( expresion ) .)
    IN              reduce using rule 37 (expresion -> ( expresion ) .)
    FI              reduce using rule 37 (expresion -> ( expresion ) .)


state 77

    (23) expresion -> { llaves_rep } .
    }               reduce using rule 23 (expresion -> { llaves_rep } .)
    .               reduce using rule 23 (expresion -> { llaves_rep } .)
    @               reduce using rule 23 (expresion -> { llaves_rep } .)
    =               reduce using rule 23 (expresion -> { llaves_rep } .)
    LE              reduce using rule 23 (expresion -> { llaves_rep } .)
    <               reduce using rule 23 (expresion -> { llaves_rep } .)
    /               reduce using rule 23 (expresion -> { llaves_rep } .)
    *               reduce using rule 23 (expresion -> { llaves_rep } .)
    -               reduce using rule 23 (expresion -> { llaves_rep } .)
    +               reduce using rule 23 (expresion -> { llaves_rep } .)
    )               reduce using rule 23 (expresion -> { llaves_rep } .)
    ;               reduce using rule 23 (expresion -> { llaves_rep } .)
    OF              reduce using rule 23 (expresion -> { llaves_rep } .)
    LOOP            reduce using rule 23 (expresion -> { llaves_rep } .)
    THEN            reduce using rule 23 (expresion -> { llaves_rep } .)
    ,               reduce using rule 23 (expresion -> { llaves_rep } .)
    POOL            reduce using rule 23 (expresion -> { llaves_rep } .)
    ELSE            reduce using rule 23 (expresion -> { llaves_rep } .)
    IN              reduce using rule 23 (expresion -> { llaves_rep } .)
    FI              reduce using rule 23 (expresion -> { llaves_rep } .)


state 78

    (56) llaves_rep -> llaves_rep expresion . ;
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    ;               shift and go to state 97
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 79

    (55) llaves_rep -> expresion ; .
    }               reduce using rule 55 (llaves_rep -> expresion ; .)
    NUMBER          reduce using rule 55 (llaves_rep -> expresion ; .)
    BOOL_CONST      reduce using rule 55 (llaves_rep -> expresion ; .)
    STR_CONST       reduce using rule 55 (llaves_rep -> expresion ; .)
    INT_CONST       reduce using rule 55 (llaves_rep -> expresion ; .)
    OBJECTID        reduce using rule 55 (llaves_rep -> expresion ; .)
    NEW             reduce using rule 55 (llaves_rep -> expresion ; .)
    {               reduce using rule 55 (llaves_rep -> expresion ; .)
    CASE            reduce using rule 55 (llaves_rep -> expresion ; .)
    LET             reduce using rule 55 (llaves_rep -> expresion ; .)
    WHILE           reduce using rule 55 (llaves_rep -> expresion ; .)
    IF              reduce using rule 55 (llaves_rep -> expresion ; .)
    ~               reduce using rule 55 (llaves_rep -> expresion ; .)
    ISVOID          reduce using rule 55 (llaves_rep -> expresion ; .)
    NOT             reduce using rule 55 (llaves_rep -> expresion ; .)
    (               reduce using rule 55 (llaves_rep -> expresion ; .)


state 80

    (12) metodo -> OBJECTID ( formales ) : TYPEID { expresion } ; .
    }               reduce using rule 12 (metodo -> OBJECTID ( formales ) : TYPEID { expresion } ; .)
    OBJECTID        reduce using rule 12 (metodo -> OBJECTID ( formales ) : TYPEID { expresion } ; .)


state 81

    (28) expresion -> expresion . OBJECTID . ( )
    (31) expresion -> expresion . OBJECTID . ( expresiones expresion )
    (               shift and go to state 98


state 82

    (32) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 99


state 83

    (38) expresion -> expresion = expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 38 (expresion -> expresion = expresion .)
    =               reduce using rule 38 (expresion -> expresion = expresion .)
    LE              reduce using rule 38 (expresion -> expresion = expresion .)
    <               reduce using rule 38 (expresion -> expresion = expresion .)
    )               reduce using rule 38 (expresion -> expresion = expresion .)
    ;               reduce using rule 38 (expresion -> expresion = expresion .)
    OF              reduce using rule 38 (expresion -> expresion = expresion .)
    LOOP            reduce using rule 38 (expresion -> expresion = expresion .)
    THEN            reduce using rule 38 (expresion -> expresion = expresion .)
    ,               reduce using rule 38 (expresion -> expresion = expresion .)
    POOL            reduce using rule 38 (expresion -> expresion = expresion .)
    ELSE            reduce using rule 38 (expresion -> expresion = expresion .)
    IN              reduce using rule 38 (expresion -> expresion = expresion .)
    FI              reduce using rule 38 (expresion -> expresion = expresion .)
    .               shift and go to state 54
    @               shift and go to state 55
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 84

    (39) expresion -> expresion LE expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 39 (expresion -> expresion LE expresion .)
    =               reduce using rule 39 (expresion -> expresion LE expresion .)
    LE              reduce using rule 39 (expresion -> expresion LE expresion .)
    <               reduce using rule 39 (expresion -> expresion LE expresion .)
    )               reduce using rule 39 (expresion -> expresion LE expresion .)
    ;               reduce using rule 39 (expresion -> expresion LE expresion .)
    OF              reduce using rule 39 (expresion -> expresion LE expresion .)
    LOOP            reduce using rule 39 (expresion -> expresion LE expresion .)
    THEN            reduce using rule 39 (expresion -> expresion LE expresion .)
    ,               reduce using rule 39 (expresion -> expresion LE expresion .)
    POOL            reduce using rule 39 (expresion -> expresion LE expresion .)
    ELSE            reduce using rule 39 (expresion -> expresion LE expresion .)
    IN              reduce using rule 39 (expresion -> expresion LE expresion .)
    FI              reduce using rule 39 (expresion -> expresion LE expresion .)
    .               shift and go to state 54
    @               shift and go to state 55
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 85

    (40) expresion -> expresion < expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 40 (expresion -> expresion < expresion .)
    =               reduce using rule 40 (expresion -> expresion < expresion .)
    LE              reduce using rule 40 (expresion -> expresion < expresion .)
    <               reduce using rule 40 (expresion -> expresion < expresion .)
    )               reduce using rule 40 (expresion -> expresion < expresion .)
    ;               reduce using rule 40 (expresion -> expresion < expresion .)
    OF              reduce using rule 40 (expresion -> expresion < expresion .)
    LOOP            reduce using rule 40 (expresion -> expresion < expresion .)
    THEN            reduce using rule 40 (expresion -> expresion < expresion .)
    ,               reduce using rule 40 (expresion -> expresion < expresion .)
    POOL            reduce using rule 40 (expresion -> expresion < expresion .)
    ELSE            reduce using rule 40 (expresion -> expresion < expresion .)
    IN              reduce using rule 40 (expresion -> expresion < expresion .)
    FI              reduce using rule 40 (expresion -> expresion < expresion .)
    .               shift and go to state 54
    @               shift and go to state 55
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 86

    (41) expresion -> expresion / expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 41 (expresion -> expresion / expresion .)
    =               reduce using rule 41 (expresion -> expresion / expresion .)
    LE              reduce using rule 41 (expresion -> expresion / expresion .)
    <               reduce using rule 41 (expresion -> expresion / expresion .)
    /               reduce using rule 41 (expresion -> expresion / expresion .)
    *               reduce using rule 41 (expresion -> expresion / expresion .)
    -               reduce using rule 41 (expresion -> expresion / expresion .)
    +               reduce using rule 41 (expresion -> expresion / expresion .)
    )               reduce using rule 41 (expresion -> expresion / expresion .)
    ;               reduce using rule 41 (expresion -> expresion / expresion .)
    OF              reduce using rule 41 (expresion -> expresion / expresion .)
    LOOP            reduce using rule 41 (expresion -> expresion / expresion .)
    THEN            reduce using rule 41 (expresion -> expresion / expresion .)
    ,               reduce using rule 41 (expresion -> expresion / expresion .)
    POOL            reduce using rule 41 (expresion -> expresion / expresion .)
    ELSE            reduce using rule 41 (expresion -> expresion / expresion .)
    IN              reduce using rule 41 (expresion -> expresion / expresion .)
    FI              reduce using rule 41 (expresion -> expresion / expresion .)
    .               shift and go to state 54
    @               shift and go to state 55


state 87

    (42) expresion -> expresion * expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 42 (expresion -> expresion * expresion .)
    =               reduce using rule 42 (expresion -> expresion * expresion .)
    LE              reduce using rule 42 (expresion -> expresion * expresion .)
    <               reduce using rule 42 (expresion -> expresion * expresion .)
    /               reduce using rule 42 (expresion -> expresion * expresion .)
    *               reduce using rule 42 (expresion -> expresion * expresion .)
    -               reduce using rule 42 (expresion -> expresion * expresion .)
    +               reduce using rule 42 (expresion -> expresion * expresion .)
    )               reduce using rule 42 (expresion -> expresion * expresion .)
    ;               reduce using rule 42 (expresion -> expresion * expresion .)
    OF              reduce using rule 42 (expresion -> expresion * expresion .)
    LOOP            reduce using rule 42 (expresion -> expresion * expresion .)
    THEN            reduce using rule 42 (expresion -> expresion * expresion .)
    ,               reduce using rule 42 (expresion -> expresion * expresion .)
    POOL            reduce using rule 42 (expresion -> expresion * expresion .)
    ELSE            reduce using rule 42 (expresion -> expresion * expresion .)
    IN              reduce using rule 42 (expresion -> expresion * expresion .)
    FI              reduce using rule 42 (expresion -> expresion * expresion .)
    .               shift and go to state 54
    @               shift and go to state 55


state 88

    (43) expresion -> expresion - expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 43 (expresion -> expresion - expresion .)
    =               reduce using rule 43 (expresion -> expresion - expresion .)
    LE              reduce using rule 43 (expresion -> expresion - expresion .)
    <               reduce using rule 43 (expresion -> expresion - expresion .)
    -               reduce using rule 43 (expresion -> expresion - expresion .)
    +               reduce using rule 43 (expresion -> expresion - expresion .)
    )               reduce using rule 43 (expresion -> expresion - expresion .)
    ;               reduce using rule 43 (expresion -> expresion - expresion .)
    OF              reduce using rule 43 (expresion -> expresion - expresion .)
    LOOP            reduce using rule 43 (expresion -> expresion - expresion .)
    THEN            reduce using rule 43 (expresion -> expresion - expresion .)
    ,               reduce using rule 43 (expresion -> expresion - expresion .)
    POOL            reduce using rule 43 (expresion -> expresion - expresion .)
    ELSE            reduce using rule 43 (expresion -> expresion - expresion .)
    IN              reduce using rule 43 (expresion -> expresion - expresion .)
    FI              reduce using rule 43 (expresion -> expresion - expresion .)
    .               shift and go to state 54
    @               shift and go to state 55
    /               shift and go to state 59
    *               shift and go to state 60


state 89

    (44) expresion -> expresion + expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    }               reduce using rule 44 (expresion -> expresion + expresion .)
    =               reduce using rule 44 (expresion -> expresion + expresion .)
    LE              reduce using rule 44 (expresion -> expresion + expresion .)
    <               reduce using rule 44 (expresion -> expresion + expresion .)
    -               reduce using rule 44 (expresion -> expresion + expresion .)
    +               reduce using rule 44 (expresion -> expresion + expresion .)
    )               reduce using rule 44 (expresion -> expresion + expresion .)
    ;               reduce using rule 44 (expresion -> expresion + expresion .)
    OF              reduce using rule 44 (expresion -> expresion + expresion .)
    LOOP            reduce using rule 44 (expresion -> expresion + expresion .)
    THEN            reduce using rule 44 (expresion -> expresion + expresion .)
    ,               reduce using rule 44 (expresion -> expresion + expresion .)
    POOL            reduce using rule 44 (expresion -> expresion + expresion .)
    ELSE            reduce using rule 44 (expresion -> expresion + expresion .)
    IN              reduce using rule 44 (expresion -> expresion + expresion .)
    FI              reduce using rule 44 (expresion -> expresion + expresion .)
    .               shift and go to state 54
    @               shift and go to state 55
    /               shift and go to state 59
    *               shift and go to state 60


state 90

    (24) expresion -> CASE expresion OF . case_list ESAC
    (53) case_list -> . case_list OBJECTID : TYPEID DARROW expresion ;
    (54) case_list -> . OBJECTID : TYPEID DARROW expresion ;
    OBJECTID        shift and go to state 101

    case_list                      shift and go to state 100

state 91

    (25) expresion -> LET let_declarations IN . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 102

state 92

    (49) let_declarations -> let_declarations , . let_declaration
    (48) let_declaration -> . OBJECTID : TYPEID opt_assign
    OBJECTID        shift and go to state 67

    let_declaration                shift and go to state 103

state 93

    (48) let_declaration -> OBJECTID : . TYPEID opt_assign
    TYPEID          shift and go to state 104


state 94

    (26) expresion -> WHILE expresion LOOP . expresion POOL
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 105

state 95

    (27) expresion -> IF expresion THEN . expresion ELSE expresion FI
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 106

state 96

    (30) expresion -> OBJECTID ( expresiones expresion . )
    (47) expresiones -> expresiones expresion . ,
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    )               shift and go to state 107
    ,               shift and go to state 108
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 97

    (56) llaves_rep -> llaves_rep expresion ; .
    }               reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    NUMBER          reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    BOOL_CONST      reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    STR_CONST       reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    INT_CONST       reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    OBJECTID        reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    NEW             reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    {               reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    CASE            reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    LET             reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    WHILE           reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    IF              reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    ~               reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    ISVOID          reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    NOT             reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)
    (               reduce using rule 56 (llaves_rep -> llaves_rep expresion ; .)


state 98

    (28) expresion -> expresion . OBJECTID ( . )
    (31) expresion -> expresion . OBJECTID ( . expresiones expresion )
    (46) expresiones -> .
    (47) expresiones -> . expresiones expresion ,
    )               shift and go to state 109
    NUMBER          reduce using rule 46 (expresiones -> .)
    BOOL_CONST      reduce using rule 46 (expresiones -> .)
    STR_CONST       reduce using rule 46 (expresiones -> .)
    INT_CONST       reduce using rule 46 (expresiones -> .)
    OBJECTID        reduce using rule 46 (expresiones -> .)
    NEW             reduce using rule 46 (expresiones -> .)
    {               reduce using rule 46 (expresiones -> .)
    CASE            reduce using rule 46 (expresiones -> .)
    LET             reduce using rule 46 (expresiones -> .)
    WHILE           reduce using rule 46 (expresiones -> .)
    IF              reduce using rule 46 (expresiones -> .)
    ~               reduce using rule 46 (expresiones -> .)
    ISVOID          reduce using rule 46 (expresiones -> .)
    NOT             reduce using rule 46 (expresiones -> .)
    (               reduce using rule 46 (expresiones -> .)

    expresiones                    shift and go to state 110

state 99

    (32) expresion -> expresion @ TYPEID . . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 111


state 100

    (24) expresion -> CASE expresion OF case_list . ESAC
    (53) case_list -> case_list . OBJECTID : TYPEID DARROW expresion ;
    ESAC            shift and go to state 112
    OBJECTID        shift and go to state 113


state 101

    (54) case_list -> OBJECTID . : TYPEID DARROW expresion ;
    :               shift and go to state 114


state 102

    (25) expresion -> LET let_declarations IN expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    }               reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    )               reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    ;               reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    OF              reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    LOOP            reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    THEN            reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    ,               reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    POOL            reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    ELSE            reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    IN              reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    FI              reduce using rule 25 (expresion -> LET let_declarations IN expresion .)
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 103

    (49) let_declarations -> let_declarations , let_declaration .
    IN              reduce using rule 49 (let_declarations -> let_declarations , let_declaration .)
    ,               reduce using rule 49 (let_declarations -> let_declarations , let_declaration .)


state 104

    (48) let_declaration -> OBJECTID : TYPEID . opt_assign
    (51) opt_assign -> .
    (52) opt_assign -> . ASSIGN expresion
    IN              reduce using rule 51 (opt_assign -> .)
    ,               reduce using rule 51 (opt_assign -> .)
    ASSIGN          shift and go to state 116

    opt_assign                     shift and go to state 115

state 105

    (26) expresion -> WHILE expresion LOOP expresion . POOL
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    POOL            shift and go to state 117
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 106

    (27) expresion -> IF expresion THEN expresion . ELSE expresion FI
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    ELSE            shift and go to state 118
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 107

    (30) expresion -> OBJECTID ( expresiones expresion ) .
    }               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    .               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    @               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    =               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    LE              reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    <               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    /               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    *               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    -               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    +               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    )               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    ;               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    OF              reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    LOOP            reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    THEN            reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    ,               reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    POOL            reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    ELSE            reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    IN              reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)
    FI              reduce using rule 30 (expresion -> OBJECTID ( expresiones expresion ) .)


state 108

    (47) expresiones -> expresiones expresion , .
    NUMBER          reduce using rule 47 (expresiones -> expresiones expresion , .)
    BOOL_CONST      reduce using rule 47 (expresiones -> expresiones expresion , .)
    STR_CONST       reduce using rule 47 (expresiones -> expresiones expresion , .)
    INT_CONST       reduce using rule 47 (expresiones -> expresiones expresion , .)
    OBJECTID        reduce using rule 47 (expresiones -> expresiones expresion , .)
    NEW             reduce using rule 47 (expresiones -> expresiones expresion , .)
    {               reduce using rule 47 (expresiones -> expresiones expresion , .)
    CASE            reduce using rule 47 (expresiones -> expresiones expresion , .)
    LET             reduce using rule 47 (expresiones -> expresiones expresion , .)
    WHILE           reduce using rule 47 (expresiones -> expresiones expresion , .)
    IF              reduce using rule 47 (expresiones -> expresiones expresion , .)
    ~               reduce using rule 47 (expresiones -> expresiones expresion , .)
    ISVOID          reduce using rule 47 (expresiones -> expresiones expresion , .)
    NOT             reduce using rule 47 (expresiones -> expresiones expresion , .)
    (               reduce using rule 47 (expresiones -> expresiones expresion , .)


state 109

    (28) expresion -> expresion . OBJECTID ( ) .
    }               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    .               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    @               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    =               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    LE              reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    <               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    /               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    *               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    -               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    +               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    )               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    ;               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    OF              reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    LOOP            reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    THEN            reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    ,               reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    POOL            reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    ELSE            reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    IN              reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)
    FI              reduce using rule 28 (expresion -> expresion . OBJECTID ( ) .)


state 110

    (31) expresion -> expresion . OBJECTID ( expresiones . expresion )
    (47) expresiones -> expresiones . expresion ,
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 119

state 111

    (32) expresion -> expresion @ TYPEID . OBJECTID . ( expresiones expresion )
    (33) expresion -> expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 120


state 112

    (24) expresion -> CASE expresion OF case_list ESAC .
    }               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    .               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    @               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    =               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    LE              reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    <               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    /               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    *               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    -               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    +               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    )               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    ;               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    OF              reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    LOOP            reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    THEN            reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    ,               reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    POOL            reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    ELSE            reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    IN              reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)
    FI              reduce using rule 24 (expresion -> CASE expresion OF case_list ESAC .)


state 113

    (53) case_list -> case_list OBJECTID . : TYPEID DARROW expresion ;
    :               shift and go to state 121


state 114

    (54) case_list -> OBJECTID : . TYPEID DARROW expresion ;
    TYPEID          shift and go to state 122


state 115

    (48) let_declaration -> OBJECTID : TYPEID opt_assign .
    IN              reduce using rule 48 (let_declaration -> OBJECTID : TYPEID opt_assign .)
    ,               reduce using rule 48 (let_declaration -> OBJECTID : TYPEID opt_assign .)


state 116

    (52) opt_assign -> ASSIGN . expresion
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 123

state 117

    (26) expresion -> WHILE expresion LOOP expresion POOL .
    }               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    .               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    @               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    =               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    LE              reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    <               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    /               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    *               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    -               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    +               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    )               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    ;               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    OF              reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    LOOP            reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    THEN            reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    ,               reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    POOL            reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    ELSE            reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    IN              reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)
    FI              reduce using rule 26 (expresion -> WHILE expresion LOOP expresion POOL .)


state 118

    (27) expresion -> IF expresion THEN expresion ELSE . expresion FI
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 124

state 119

    (31) expresion -> expresion . OBJECTID ( expresiones expresion . )
    (47) expresiones -> expresiones expresion . ,
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    )               shift and go to state 125
    ,               shift and go to state 108
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 120

    (32) expresion -> expresion @ TYPEID . OBJECTID ( . expresiones expresion )
    (33) expresion -> expresion @ TYPEID . OBJECTID ( . )
    (46) expresiones -> .
    (47) expresiones -> . expresiones expresion ,
    )               shift and go to state 127
    NUMBER          reduce using rule 46 (expresiones -> .)
    BOOL_CONST      reduce using rule 46 (expresiones -> .)
    STR_CONST       reduce using rule 46 (expresiones -> .)
    INT_CONST       reduce using rule 46 (expresiones -> .)
    OBJECTID        reduce using rule 46 (expresiones -> .)
    NEW             reduce using rule 46 (expresiones -> .)
    {               reduce using rule 46 (expresiones -> .)
    CASE            reduce using rule 46 (expresiones -> .)
    LET             reduce using rule 46 (expresiones -> .)
    WHILE           reduce using rule 46 (expresiones -> .)
    IF              reduce using rule 46 (expresiones -> .)
    ~               reduce using rule 46 (expresiones -> .)
    ISVOID          reduce using rule 46 (expresiones -> .)
    NOT             reduce using rule 46 (expresiones -> .)
    (               reduce using rule 46 (expresiones -> .)

    expresiones                    shift and go to state 126

state 121

    (53) case_list -> case_list OBJECTID : . TYPEID DARROW expresion ;
    TYPEID          shift and go to state 128


state 122

    (54) case_list -> OBJECTID : TYPEID . DARROW expresion ;
    DARROW          shift and go to state 129


state 123

    (52) opt_assign -> ASSIGN expresion .
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    IN              reduce using rule 52 (opt_assign -> ASSIGN expresion .)
    ,               reduce using rule 52 (opt_assign -> ASSIGN expresion .)
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 124

    (27) expresion -> IF expresion THEN expresion ELSE expresion . FI
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    FI              shift and go to state 130
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 125

    (31) expresion -> expresion . OBJECTID ( expresiones expresion ) .
    }               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    .               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    @               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    =               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    LE              reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    <               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    /               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    *               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    -               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    +               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    )               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    ;               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    OF              reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    LOOP            reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    THEN            reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    ,               reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    POOL            reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    ELSE            reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    IN              reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)
    FI              reduce using rule 31 (expresion -> expresion . OBJECTID ( expresiones expresion ) .)


state 126

    (32) expresion -> expresion @ TYPEID . OBJECTID ( expresiones . expresion )
    (47) expresiones -> expresiones . expresion ,
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 131

state 127

    (33) expresion -> expresion @ TYPEID . OBJECTID ( ) .
    }               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 33 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)


state 128

    (53) case_list -> case_list OBJECTID : TYPEID . DARROW expresion ;
    DARROW          shift and go to state 132


state 129

    (54) case_list -> OBJECTID : TYPEID DARROW . expresion ;
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 133

state 130

    (27) expresion -> IF expresion THEN expresion ELSE expresion FI .
    }               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    .               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    @               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    =               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LE              reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    <               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    /               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    *               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    -               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    +               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    )               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ;               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    OF              reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LOOP            reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    THEN            reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ,               reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    POOL            reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ELSE            reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    IN              reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    FI              reduce using rule 27 (expresion -> IF expresion THEN expresion ELSE expresion FI .)


state 131

    (32) expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion . )
    (47) expresiones -> expresiones expresion . ,
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    )               shift and go to state 134
    ,               shift and go to state 108
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 132

    (53) case_list -> case_list OBJECTID : TYPEID DARROW . expresion ;
    (17) expresion -> . NUMBER
    (18) expresion -> . BOOL_CONST
    (19) expresion -> . STR_CONST
    (20) expresion -> . INT_CONST
    (21) expresion -> . OBJECTID
    (22) expresion -> . NEW TYPEID
    (23) expresion -> . { llaves_rep }
    (24) expresion -> . CASE expresion OF case_list ESAC
    (25) expresion -> . LET let_declarations IN expresion
    (26) expresion -> . WHILE expresion LOOP expresion POOL
    (27) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (28) expresion -> . expresion . OBJECTID ( )
    (29) expresion -> . OBJECTID ( )
    (30) expresion -> . OBJECTID ( expresiones expresion )
    (31) expresion -> . expresion . OBJECTID ( expresiones expresion )
    (32) expresion -> . expresion @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (34) expresion -> . ~ expresion
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . NOT expresion
    (37) expresion -> . ( expresion )
    (38) expresion -> . expresion = expresion
    (39) expresion -> . expresion LE expresion
    (40) expresion -> . expresion < expresion
    (41) expresion -> . expresion / expresion
    (42) expresion -> . expresion * expresion
    (43) expresion -> . expresion - expresion
    (44) expresion -> . expresion + expresion
    (45) expresion -> . OBJECTID ASSIGN expresion
    NUMBER          shift and go to state 36
    BOOL_CONST      shift and go to state 37
    STR_CONST       shift and go to state 38
    INT_CONST       shift and go to state 39
    OBJECTID        shift and go to state 32
    NEW             shift and go to state 40
    {               shift and go to state 34
    CASE            shift and go to state 41
    LET             shift and go to state 42
    WHILE           shift and go to state 43
    IF              shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NOT             shift and go to state 47
    (               shift and go to state 33

    expresion                      shift and go to state 135

state 133

    (54) case_list -> OBJECTID : TYPEID DARROW expresion . ;
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    ;               shift and go to state 136
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 134

    (32) expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .
    }               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    .               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    @               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    =               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    LE              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    <               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    /               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    *               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    -               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    +               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    )               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    ;               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    OF              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    LOOP            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    THEN            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    ,               reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    POOL            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    ELSE            reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    IN              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)
    FI              reduce using rule 32 (expresion -> expresion @ TYPEID . OBJECTID ( expresiones expresion ) .)


state 135

    (53) case_list -> case_list OBJECTID : TYPEID DARROW expresion . ;
    (28) expresion -> expresion . . OBJECTID ( )
    (31) expresion -> expresion . . OBJECTID ( expresiones expresion )
    (32) expresion -> expresion . @ TYPEID . OBJECTID ( expresiones expresion )
    (33) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (38) expresion -> expresion . = expresion
    (39) expresion -> expresion . LE expresion
    (40) expresion -> expresion . < expresion
    (41) expresion -> expresion . / expresion
    (42) expresion -> expresion . * expresion
    (43) expresion -> expresion . - expresion
    (44) expresion -> expresion . + expresion
    ;               shift and go to state 137
    .               shift and go to state 54
    @               shift and go to state 55
    =               shift and go to state 56
    LE              shift and go to state 57
    <               shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 136

    (54) case_list -> OBJECTID : TYPEID DARROW expresion ; .
    ESAC            reduce using rule 54 (case_list -> OBJECTID : TYPEID DARROW expresion ; .)
    OBJECTID        reduce using rule 54 (case_list -> OBJECTID : TYPEID DARROW expresion ; .)


state 137

    (53) case_list -> case_list OBJECTID : TYPEID DARROW expresion ; .
    ESAC            reduce using rule 53 (case_list -> case_list OBJECTID : TYPEID DARROW expresion ; .)
    OBJECTID        reduce using rule 53 (case_list -> case_list OBJECTID : TYPEID DARROW expresion ; .)


Conflicts:

shift/reduce conflict for . in state 102 resolved as shift
shift/reduce conflict for @ in state 102 resolved as shift
shift/reduce conflict for = in state 102 resolved as shift
shift/reduce conflict for LE in state 102 resolved as shift
shift/reduce conflict for < in state 102 resolved as shift
shift/reduce conflict for / in state 102 resolved as shift
shift/reduce conflict for * in state 102 resolved as shift
shift/reduce conflict for - in state 102 resolved as shift
shift/reduce conflict for + in state 102 resolved as shift
reduce/reduce conflict in state 13 resolved using rule atributos -> atributos atributo
rejected rule (atributo -> atributo) in state 13
Rule (atributo -> atributo) is never reduced